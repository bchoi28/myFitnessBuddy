/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/muscleMap */ \"./src/scripts/muscleMap.js\");\n/* harmony import */ var _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/carousel */ \"./src/scripts/carousel.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const instructionsContainer = document.querySelector('.instructions-container');\n\n  const storedExercises = [];\n  const carouselContainer = document.querySelector('.carousel-container');\n  const myCarousel = new _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__[\"default\"](carouselContainer, storedExercises);\n  const bodyContainer = document.querySelector('.body-container');\n  new _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](bodyContainer, myCarousel);\n  document.querySelector('.main-title').addEventListener(\"click\", () => {\n    location.reload();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTRDO0FBQ0Y7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRDs7RUFFQSxNQUFNQyxlQUFlLEdBQUcsRUFBRTtFQUMxQixNQUFNQyxpQkFBaUIsR0FBR0gsUUFBUSxDQUFDSSxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdkUsTUFBTUMsVUFBVSxHQUFHLElBQUlOLHlEQUFRLENBQUNJLGlCQUFpQixFQUFFRCxlQUFlLENBQUM7RUFFbkUsTUFBTUksYUFBYSxHQUFHTixRQUFRLENBQUNJLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztFQUMvRCxJQUFJTiwwREFBUyxDQUFDUSxhQUFhLEVBQUVELFVBQVUsQ0FBQztFQUV4Q0wsUUFBUSxDQUFDSSxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUNILGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFNO0lBQ2xFTSxRQUFRLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0VBQ3JCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215Zml0bmVzc2J1ZGR5Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE11c2NsZU1hcCBmcm9tICcuL3NjcmlwdHMvbXVzY2xlTWFwJztcbmltcG9ydCBDYXJvdXNlbCBmcm9tICcuL3NjcmlwdHMvY2Fyb3VzZWwnO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIC8vIGNvbnN0IGluc3RydWN0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnN0cnVjdGlvbnMtY29udGFpbmVyJyk7XG5cbiAgICBjb25zdCBzdG9yZWRFeGVyY2lzZXMgPSBbXTtcbiAgICBjb25zdCBjYXJvdXNlbENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1jb250YWluZXInKTtcbiAgICBjb25zdCBteUNhcm91c2VsID0gbmV3IENhcm91c2VsKGNhcm91c2VsQ29udGFpbmVyLCBzdG9yZWRFeGVyY2lzZXMpO1xuXG4gICAgY29uc3QgYm9keUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib2R5LWNvbnRhaW5lcicpO1xuICAgIG5ldyBNdXNjbGVNYXAoYm9keUNvbnRhaW5lciwgbXlDYXJvdXNlbCk7XG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi10aXRsZScpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xuICAgIH0pXG59KTtcbiJdLCJuYW1lcyI6WyJNdXNjbGVNYXAiLCJDYXJvdXNlbCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInN0b3JlZEV4ZXJjaXNlcyIsImNhcm91c2VsQ29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsIm15Q2Fyb3VzZWwiLCJib2R5Q29udGFpbmVyIiwibG9jYXRpb24iLCJyZWxvYWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/carousel.js":
/*!*********************************!*\
  !*** ./src/scripts/carousel.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises */ \"./src/scripts/exercises.js\");\n\nclass Carousel {\n  constructor(containerEl, storedExercises) {\n    this.container = containerEl;\n    this.render();\n    this.storedExercises = storedExercises;\n  }\n  render() {\n    const carousel = document.createElement(\"div\");\n    carousel.classList.add(\"carousel\");\n    const carouselNav = document.createElement(\"div\");\n    carouselNav.classList.add(\"carousel-nav\");\n    this.carouselNav = carouselNav;\n    const carouselSlides = document.createElement(\"div\");\n    carouselSlides.classList.add(\"carousel-slides\");\n    this.carouselSlides = carouselSlides;\n    const exerciseTitle = document.createElement(\"div\");\n    exerciseTitle.classList.add(\"my-exercises\");\n    exerciseTitle.innerText = \"My Exercises\";\n    this.container.appendChild(carousel);\n    carousel.style.display = \"none\";\n    carousel.append(exerciseTitle, carouselNav, carouselSlides);\n  }\n  addExerciseToCarousel(exercise) {\n    const carouselItem = document.createElement(\"div\");\n    carouselItem.classList.add(\"carousel-item\");\n    carouselItem.id = `carousel-item-${document.querySelectorAll(\".carousel-item\").length + 1}`;\n    const carouselItemTitle = document.createElement('div');\n    carouselItemTitle.classList.add('carousel-item-title');\n    carouselItemTitle.innerText = exercise.name;\n    const carouselItemType = document.createElement('div');\n    carouselItemType.classList.add('carousel-item-type');\n    carouselItemType.innerText = exercise.type;\n    const closeButton = document.createElement(\"button\");\n    closeButton.classList.add(\"carousel-item-close-button\");\n    closeButton.innerText = \"X\";\n    if (this.carouselSlides.children.length === 4) {\n      return;\n    }\n    this.carouselSlides.appendChild(carouselItem);\n    carouselItem.append(carouselItemTitle, carouselItemType, closeButton);\n    if (this.carouselSlides.children.length === 1) {\n      this.container.querySelector(\".carousel\").style.display = \"block\";\n    }\n    carouselItem.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    const numItems = document.querySelectorAll(\".carousel-item\").length;\n    const newNavItem = document.createElement(\"a\");\n    const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n    navItems.forEach(navItem => navItem.classList.remove('active'));\n    newNavItem.classList.add('active');\n    newNavItem.href = `#carousel-item-${numItems}`;\n    newNavItem.textContent = numItems.toString();\n    newNavItem.dataset.exerciseName = exercise.name;\n    this.carouselNav.appendChild(newNavItem);\n    newNavItem.addEventListener('click', event => {\n      debugger;\n      const exerciseName = event.target.dataset.exerciseName;\n      const updatedExercise = this.storedExercises.find(exercise => exercise.name === exerciseName);\n      if (updatedExercise) {\n        (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.displayExerciseInfo)(updatedExercise);\n      }\n      const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n      navItems.forEach(navItem => navItem.classList.remove('active'));\n      event.target.classList.add('active');\n    });\n\n    // closeButton.addEventListener('click', () => {\n    //     const nextExercise = this.removeExerciseFromCarousel(carouselItem);\n    //     removeExerciseFromInfoContainer(nextExercise);\n\n    //     // Set the active class on the next navigation item (assuming you're showing the next item in the carousel)\n    //     // const nextNavItem = this.carouselNav.querySelector('a.active');\n    //     // if (nextNavItem) nextNavItem.classList.remove('active');\n    //     // const newActiveNavItem = this.carouselNav.querySelector(`a[href=\"#${carouselItem.nextElementSibling.id}\"]`);\n    //     // if (newActiveNavItem) newActiveNavItem.classList.add('active');\n    // });\n    // closeButton.addEventListener('click', () => {\n    //     // Determine the next active carousel item before removal\n    //     let nextActiveCarouselItem = carouselItem.nextElementSibling || carouselItem.previousElementSibling;\n\n    //     // Remove the current carousel item\n    //     const nextExercise = this.removeExerciseFromCarousel(carouselItem);\n    //     removeExerciseFromInfoContainer(nextExercise);\n\n    //     // Set the active class on the next navigation item\n    //     if (nextActiveCarouselItem) {\n    //         nextActiveCarouselItem.classList.add('active'); // Make sure you've logic elsewhere to remove active class from other carousel items\n    //         const nextActiveCarouselItemId = nextActiveCarouselItem.id.split(\"-\")[2];\n    //         const nextActiveNavItem = this.carouselNav.querySelector(`a[href=\"#carousel-item-${nextActiveCarouselItemId}\"]`);\n    //         if (nextActiveNavItem) {\n    //             nextActiveNavItem.classList.add('active');\n    //         }\n    //     }\n    // });\n\n    closeButton.addEventListener('click', () => {\n      // Determine the next active carousel item before removal\n      let nextActiveCarouselItem = carouselItem.nextElementSibling || carouselItem.previousElementSibling;\n\n      // Clear active class from all carousel items\n      const allCarouselItems = this.carouselSlides.querySelectorAll('.carousel-item');\n      allCarouselItems.forEach(item => item.classList.remove('active'));\n\n      // Clear active class from all navigation items\n      const allNavItems = this.carouselNav.querySelectorAll('a');\n      allNavItems.forEach(item => item.classList.remove('active'));\n\n      // Remove the current carousel item\n      const nextExercise = this.removeExerciseFromCarousel(carouselItem);\n      (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.removeExerciseFromInfoContainer)(nextExercise);\n\n      // Set the active class on the next navigation item\n      if (nextActiveCarouselItem) {\n        nextActiveCarouselItem.classList.add('active');\n        const nextActiveCarouselItemId = nextActiveCarouselItem.id.split(\"-\")[2];\n        const nextActiveNavItem = this.carouselNav.querySelector(`a[href=\"#carousel-item-${nextActiveCarouselItemId}\"]`);\n        if (nextActiveNavItem) {\n          nextActiveNavItem.classList.add('active');\n        }\n      }\n    });\n    debugger;\n    this.storedExercises.push(exercise);\n  }\n  removeExerciseFromCarousel(carouselItem) {\n    const itemId = carouselItem.id.split(\"-\")[2];\n    const navItem = document.querySelector(`.carousel-nav a[href=\"#carousel-item-${itemId}\"]`);\n    this.carouselNav.removeChild(navItem);\n    this.carouselSlides.removeChild(carouselItem);\n\n    // Remove the exercise from the storedExercises array\n    const exerciseName = carouselItem.querySelector('.carousel-item-title').innerText;\n    const exerciseIndex = this.storedExercises.findIndex(exercise => exercise.name === exerciseName);\n    this.storedExercises.splice(exerciseIndex, 1);\n    if (this.carouselSlides.children.length === 0) {\n      this.container.querySelector(\".carousel\").style.display = \"none\"; // Hide the carousel when all exercises are removed\n    }\n    // Determine which exercise to return based on the current index\n    let nextExerciseIndex = exerciseIndex;\n    if (nextExerciseIndex >= this.storedExercises.length) {\n      nextExerciseIndex = this.storedExercises.length - 1; // If we've removed the last exercise, take the one before it\n    }\n\n    this.renumberCarouselItemsAndNavItems();\n    return this.storedExercises[nextExerciseIndex];\n  }\n  renumberCarouselItemsAndNavItems() {\n    const carouselItems = Array.from(this.carouselSlides.children);\n    const navItems = Array.from(this.carouselNav.querySelectorAll('a'));\n    carouselItems.forEach((item, index) => {\n      item.id = `carousel-item-${index + 1}`;\n      const navItem = navItems[index];\n      navItem.href = `#carousel-item-${index + 1}`;\n      navItem.textContent = (index + 1).toString();\n      navItem.classList.remove('active'); // Reset active class\n    });\n\n    const activeCarouselItem = this.carouselSlides.querySelector('.carousel-item.active');\n    if (activeCarouselItem) {\n      const activeItemId = activeCarouselItem.id.split(\"-\")[2];\n      const activeNavItem = this.carouselNav.querySelector(`a[href=\"#carousel-item-${activeItemId}\"]`);\n      if (activeNavItem) {\n        activeNavItem.classList.add('active');\n      }\n    }\n  }\n  updateStoredExercise(updatedExercise) {\n    debugger;\n    // Find the index of the exercise that matches the name of updatedExercise\n    const index = this.storedExercises.findIndex(exercise => exercise.name === updatedExercise.name);\n    if (index !== -1) {\n      this.storedExercises[index] = updatedExercise;\n    }\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Carousel);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/carousel.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"backExercises\": function() { return /* binding */ backExercises; },\n/* harmony export */   \"bicepExercises\": function() { return /* binding */ bicepExercises; },\n/* harmony export */   \"chestExercises\": function() { return /* binding */ chestExercises; },\n/* harmony export */   \"coreExercises\": function() { return /* binding */ coreExercises; },\n/* harmony export */   \"forearmExercises\": function() { return /* binding */ forearmExercises; },\n/* harmony export */   \"gluteExercises\": function() { return /* binding */ gluteExercises; },\n/* harmony export */   \"hamstringExercises\": function() { return /* binding */ hamstringExercises; },\n/* harmony export */   \"quadExercises\": function() { return /* binding */ quadExercises; },\n/* harmony export */   \"shoulderExercises\": function() { return /* binding */ shoulderExercises; },\n/* harmony export */   \"tricepExercises\": function() { return /* binding */ tricepExercises; }\n/* harmony export */ });\nconst shoulderExercises = [{\n  type: 'SHOULDERS',\n  name: 'Seated Dumbbell Press',\n  gifName: \"dumbbell seated shoulder press\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids', 'Triceps'],\n  steps: [\"Sit on a bench with back support. Raise the dumbbells to shoulder height with your palms forward.\", \"Raise the dumbbells upwards and pause at the contracted position.\", \"Lower the weights back to starting position.\"]\n},\n// {\n//     type: 'SHOULDERS',\n//     name: 'Arnold Press',\n//     apiName: \"Dumbbell Seated Arnold Press\",\n//     primaryMuscles: ['Anterior and Lateral Deltoids'],\n//     secondaryMuscles: ['Triceps'],\n//     suggestedRepRange: '10-15 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/yj8v4s87LiY57Y\"\n// },\n{\n  type: 'SHOULDERS',\n  name: 'Dumbbell Lateral Raise',\n  gifName: \"dumbbell lateral raise\",\n  primaryMuscles: ['Lateral Deltoids'],\n  secondaryMuscles: ['Anterior and Posterior Deltoids'],\n  steps: [\"Stand up straight with dumbbells at either side, palms facing your hips.\", \"Raise your arms on either side with a slight bend in your elbow until they are parallel with the floor. Pause at the top of the motion.\", \"Slowly return your arms down to starting position.\"]\n}, {\n  type: 'SHOULDERS',\n  name: 'Dumbbell Front Raise',\n  gifName: \"dumbbell front raise\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids'],\n  steps: [\"Grab two dumbbells while standing upright with the dumbbells at your side.\", \"Raise the two dumbbells with your elbows being fully extended until the dumbbells are eye level.\", \"Lower the weights in a controlled manner to the starting position and repeat.\"]\n}\n// {\n//     type: 'SHOULDERS',\n//     name: 'Reverse Fly',\n//     apiName: \"Dumbbell Laying Reverse Fly\",\n//     primaryMuscles: ['Posterior Deltoids'],\n//     secondaryMuscles: ['Trapezius', 'Rhomboids'],\n//     suggestedRepRange: '10-15 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/t6GtGbr8C87HgB\"\n// }\n];\n\nconst chestExercises = [{\n  type: 'CHEST',\n  name: 'Barbell Bench Press',\n  gifName: 'barbell bench press',\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  steps: [\"Lay flat on the bench with your feet on the ground. With straight arms unrack the bar.\", \"Lower the bar to your mid chest\", \"Raise the bar until you've locked your elbows.\"]\n}, {\n  type: 'CHEST',\n  name: 'Push-Ups',\n  gifName: \"deep push up\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  steps: [\"Place your hands firmly on the ground, directly under shoulders.\", \"Flatten your back so your entire body is straight and slowly lower your body\", \"Draw shoulder blades back and down, keeping elbows tucked close to your body\", \"Exhale as you push back to the starting position.\"]\n}, {\n  type: 'CHEST',\n  name: 'Dumbbell Fly',\n  gifName: \"dumbbell fly\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  steps: [\"Lay flat on the bench and place your feet on the ground.\", \"Begin the exercise with the dumbbells held together above your chest, elbows slightly bent.\", \"Simultaneously lower the weights to either side.\", \"Pause when the weights are parallel to the bench, then raise your arms to the starting position.\"]\n},\n// {\n//     type: 'CHEST',\n//     name: 'Incline Bench Press',\n//     apiName: \"Barbell Incline Bench Press\",\n//     primaryMuscles: ['Upper Pectoralis Major'],\n//     secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n//     suggestedRepRange: '8-12 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/LEHuMI0sJlp8p7\"\n// },\n{\n  type: 'CHEST',\n  name: 'Cable Crossover',\n  gifName: 'cable standing fly',\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  steps: [\"Use a handle attachment set all the way to the bottom of the machine.\", \"Bring both of the handles to your chest and make sure you are in the center of the cable crossover.\", \"Walk a few steps forward.\", \"Then press the weight forward. From there, your shoulders should horizontally abduct and adduct while your elbows stay in a fixed position.\"]\n}];\nconst bicepExercises = [{\n  type: 'UPPER ARMS',\n  name: 'Barbell Curl',\n  gifName: \"barbell curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"While holding the upper arms stationary, curl the weights forward while contracting the biceps as you breathe out.\", \"Continue the movement until your biceps are fully contracted and the bar is at shoulder level.\", \"Hold the contracted position for a second and squeeze the biceps hard.\", \"Slowly bring the weight back down to the starting position.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Dumbbell Curl',\n  gifName: \"dumbbell alternate biceps curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"Stand up straight with a dumbbell in each hand at arm's length.\", \"Raise one dumbbell and twist your forearm until it is vertical and your palm faces the shoulder.\", \"Lower to original position and repeat with opposite arm.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Preacher Curl',\n  gifName: \"dumbbell alternate preacher curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"Start with a with a dumbbell in one hand and your elbow resting on the bench.\", \"From this starting position, curl the dumbbell up towards your shoulder, keeping your upper arm stationary on the bench.\"]\n}];\nconst tricepExercises = [{\n  type: 'UPPER ARMS',\n  name: 'Cable Push Down',\n  gifName: \"cable pushdown\",\n  primaryMuscles: ['Triceps Brachii'],\n  secondaryMuscles: ['Anconeus'],\n  steps: [\"You can use any attachment for this. The cable should be set all the way at the top of the machine.\", \"Make sure to keep your upper arm glued at your side. Extend your elbows until you feel your triceps contract.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Skull Crusher',\n  gifName: \"barbell lying triceps extension skull crusher\",\n  primaryMuscles: ['Triceps Brachii'],\n  secondaryMuscles: ['Anconeus', 'Deltoids'],\n  steps: [\"Take a shoulder width grip. Break at the elbows. Try to keep your elbows tucked in. Don't let them flare out.\", \"Stop the bar a few inches from your forehead and extend your elbows back up.\"]\n}];\nconst backExercises = [{\n  type: 'BACK',\n  name: 'Barbell Bent Over Row',\n  gifName: \"barbell bent over row\",\n  primaryMuscles: ['Latissimus Dorsi', 'Rhomboids', 'Trapezius'],\n  secondaryMuscles: ['Biceps Brachii', 'Brachialis', 'Brachioradialis'],\n  steps: [\"Grab a barbell with a shoulder width pronated or supinated grip.\", \"Bend forward at your hips while maintaining a flat back.\", \"Pull the weight toward your upper abdomen.\", \"Lower the weight in a controlled manner and repeat.\"]\n}, {\n  type: 'BACK',\n  name: 'Lat Pulldown',\n  gifName: \"cable pulldown\",\n  primaryMuscles: ['Latissimus Dorsi'],\n  secondaryMuscles: ['Rhomboids', 'Trapezius', 'Brachialis', 'Brachioradialis'],\n  steps: [\"Grip the bar with the palms facing forward, your hands need to be spaced out at a distance wider than shoulder width.\", \"As you have both arms extended in front of you holding the bar, bring your torso back around 30 degrees while sticking your chest out.\", \"Pull the bar down to about chin level or a little lower in a smooth movement whilst squeezing the shoulder blades together.\", \"After a second of squeezing, slowly raise the bar back to the starting position when your arms are fully extended.\"]\n}];\nconst forearmExercises = [{\n  type: 'LOWER ARMS',\n  name: 'Seated Dumbbell Wrist Curl',\n  gifName: \"dumbbell seated palms up wrist curl\",\n  primaryMuscles: ['Flexor Carpi Radialis', 'Flexor Carpi Ulnaris'],\n  secondaryMuscles: ['Flexor Digitorum Superficialis'],\n  steps: [\"Grip the dumbbell with your palm facing upwards with your forearm rested against the bench.\", \"Slowly curl your wrist upwards in a semicircular motion.\", \"Return to starting position and repeat.\"]\n}];\nconst coreExercises = [{\n  type: 'CORE',\n  name: 'Barbell Rollouts',\n  gifName: \"barbell rollerout\",\n  primaryMuscles: ['Rectus Abdominis'],\n  secondaryMuscles: ['Obliques', 'Transverse Abdominis', 'Erector Spinae'],\n  steps: [\"Hold the Barbell with both hands and kneel on the floor with your feet up\", \"Slowly roll the Barbell straight forward, stretching your body into a straight position.\", \"After a pause at the stretched position, start pulling yourself back to the starting position. This should be a slow and controlled movement.\"]\n}, {\n  type: 'CORE',\n  name: 'Crunches',\n  gifName: \"crunch floor\",\n  primaryMuscles: ['Rectus Abdominis'],\n  secondaryMuscles: ['Obliques', 'Transverse Abdominis'],\n  steps: [\"Lay flat on your back with your knees bent and your feet flat on the ground, about a foot from your lower back.\", \"Place your fingertips on your temples with your palms facing out.\", \"Draw your belly into the base of your spine to engage the muscles, then raise your head and shoulders off the floor.\", \"Return to starting position and repeat.\"]\n}];\nconst gluteExercises = [{\n  type: 'GLUTES',\n  name: 'Barbell Hip Thrust',\n  gifName: \"barbell glute bridge\",\n  primaryMuscles: ['Gluteus Maximus'],\n  secondaryMuscles: ['Hamstrings', 'Core Stabilizers'],\n  steps: [\"Sit on the ground with a bench behind you. Have the barbell over your legs just above your hips.\", \"Lean back against the bench so that your shoulders are resting upon it, stretch your arms out to either side using the bench as support.\", \"Raise the weight by driving through your feet and extending your hips upwards. Support the weight with your shoulders and feet.\", \"Slowly extend as far as you can, and then slowly return to the starting position.\"]\n}, {\n  type: 'GLUTES',\n  name: 'Cable Pull Through',\n  gifName: \"cable pull through (with rope)\",\n  primaryMuscles: ['Gluteus Maximus'],\n  secondaryMuscles: ['Hamstrings'],\n  steps: [\"This exercise works best with a rope attachment but can be done with anything. The attachment should be set to the bottom of the machine.\", \"Face away from the cable machine, straddle the cable itself, and grab the attachment. Walk a few steps away.\", \"Break at the hips while maintaining a flat back and mostly extended knees.\", \"Push hips forward until you are back in a standing position.\"]\n}];\nconst quadExercises = [{\n  type: 'QUADS',\n  name: 'Barbell Squat',\n  gifName: \"barbell bench squat\",\n  primaryMuscles: ['Quadriceps'],\n  secondaryMuscles: ['Gluteus Maximus', 'Hamstrings', 'Erector Spinae'],\n  steps: [\"Stand with your feet shoulder-width apart. Maintain the natural arch in your back, squeezing your shoulder blades and raising your chest.\", \"Grip the bar across your shoulders and support it on your upper back. Unwrack the bar by straightening your legs, and take a step back.\", \"Bend your knees as you lower the weight without altering the form of your back until your hips are below your knees.\", \"Raise the bar back to starting position, lift with your legs and exhale at the top.\"]\n}, {\n  type: 'QUADS',\n  name: 'Dumbbell Goblet Squat',\n  gifName: \"dumbbell goblet squat\",\n  primaryMuscles: ['Quadriceps'],\n  secondaryMuscles: ['Gluteus Maximus', 'Hamstrings', 'Erector Spinae'],\n  steps: [\"Hold the weight tucked into your upper chest area, keeping your elbows in. Your feet should be slightly wider than shoulder width.\", \"Sink down into the squat, keeping your elbows inside the track of your knees.\", \"Push through your heels while keeping your chest up and return to starting position.\"]\n}];\nconst hamstringExercises = [{\n  type: 'HAMSTRINGS',\n  name: 'Dumbbell Romanian Deadlift',\n  gifName: \"dumbbell romanian deadlift\",\n  primaryMuscles: ['Hamstrings'],\n  secondaryMuscles: ['Gluteus Maximus', 'Erector Spinae'],\n  steps: [\"Stand with a shoulder width stance. Push your butt back while leaving your knees MOSTLY extended.\", \"You should feel a stretch in your hamstrings. When you feel the stretch, push your hips forward to complete the rep.\", \"Do not push your hips all the way forward. This will hyperextend your spine. Just go to a normal standing position.\"]\n}, {\n  type: 'HAMSTRINGS',\n  name: 'Machine Hamstring Curl',\n  gifName: \"lever lying two-one leg curl\",\n  primaryMuscles: ['Hamstrings'],\n  secondaryMuscles: ['Calves', 'Gluteus Minimus'],\n  steps: [\"Lay down on the machine, placing your legs beneath the padded lever. Position your legs so that the padded lever is below your calve muscles.\", \"Support yourself by grabbing the side handles of the machine, and slowly raise the weight with your legs, toes pointed straight.\", \"Pause at the apex of the motion, then slowly return to starting position.\"]\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/scripts/exercises.js":
/*!**********************************!*\
  !*** ./src/scripts/exercises.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"displayExerciseInfo\": function() { return /* binding */ displayExerciseInfo; },\n/* harmony export */   \"generateExercise\": function() { return /* binding */ generateExercise; },\n/* harmony export */   \"removeExerciseFromInfoContainer\": function() { return /* binding */ removeExerciseFromInfoContainer; }\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/scripts/data.js\");\n\nconst exercises = {\n  'chest': _data_js__WEBPACK_IMPORTED_MODULE_0__.chestExercises,\n  'left-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'right-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'left-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises,\n  'right-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises,\n  'left-tricep': _data_js__WEBPACK_IMPORTED_MODULE_0__.tricepExercises,\n  'right-tricep': _data_js__WEBPACK_IMPORTED_MODULE_0__.tricepExercises,\n  'left-forearm': _data_js__WEBPACK_IMPORTED_MODULE_0__.forearmExercises,\n  'right-forearm': _data_js__WEBPACK_IMPORTED_MODULE_0__.forearmExercises,\n  'abs': _data_js__WEBPACK_IMPORTED_MODULE_0__.coreExercises,\n  'back-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.backExercises,\n  'left-glute-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.gluteExercises,\n  'right-glute-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.gluteExercises,\n  'left-quad': _data_js__WEBPACK_IMPORTED_MODULE_0__.quadExercises,\n  'right-quad': _data_js__WEBPACK_IMPORTED_MODULE_0__.quadExercises,\n  'left-hamstring': _data_js__WEBPACK_IMPORTED_MODULE_0__.hamstringExercises,\n  'right-hamstring': _data_js__WEBPACK_IMPORTED_MODULE_0__.hamstringExercises\n};\nconst generateExercise = async (muscleBlock, carouselInstance) => {\n  const exercisesByMuscleBlock = exercises[muscleBlock.classList[0]]; // Get exercises for the muscle block class\n  debugger;\n  // keep assigning an exercise until it's NOT in storedExercises\n  let exercise;\n  do {\n    const randomIndex = Math.floor(Math.random() * exercisesByMuscleBlock.length);\n    exercise = exercisesByMuscleBlock[randomIndex];\n  } while (carouselInstance.storedExercises.includes(exercise));\n\n  // check if anything exists on the R side\n  const instructionsContainer = document.querySelector('.instructions-container');\n  while (instructionsContainer.firstChild) {\n    instructionsContainer.removeChild(instructionsContainer.firstChild);\n  }\n  ;\n  const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n  while (exerciseInfoContainer.firstChild) {\n    exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n  }\n  ;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n\n  // Create/append loading spinner or text\n  const loadingIndicator = document.createElement('div');\n  loadingIndicator.classList.add('gif');\n  loadingIndicator.innerText = \"Fetching gif...\"; // You can use a CSS spinner or a loading image instead of text\n  gifContainer.appendChild(loadingIndicator);\n  const exerciseTitleContainer = document.querySelector('.exercise-title-container');\n  if (exerciseTitleContainer.firstChild) {\n    exerciseTitleContainer.removeChild(exerciseTitleContainer.firstChild);\n  }\n\n  // create/append exerciseInfo\n  const primaryMusclesTitle = document.createElement('div');\n  primaryMusclesTitle.classList.add('primary-muscles-title');\n  primaryMusclesTitle.innerText = 'Primary Muscles';\n  const primaryMuscles = document.createElement('div');\n  primaryMuscles.classList.add('primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMusclesTitle = document.createElement('div');\n  secondaryMusclesTitle.classList.add('secondary-muscles-title');\n  secondaryMusclesTitle.innerText = 'Secondary Muscles';\n  const secondaryMuscles = document.createElement('div');\n  secondaryMuscles.classList.add('secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\", \")}`;\n  const strengthButton = document.createElement('button');\n  strengthButton.classList.add('goal-button');\n  strengthButton.innerText = 'Strength';\n  strengthButton.dataset.goal = 'strength';\n  const sizeButton = document.createElement('button');\n  sizeButton.classList.add('goal-button');\n  sizeButton.innerText = 'Size';\n  sizeButton.dataset.goal = 'size';\n  const enduranceButton = document.createElement('button');\n  enduranceButton.classList.add('goal-button');\n  enduranceButton.innerText = 'Endurance';\n  enduranceButton.dataset.goal = 'endurance';\n  strengthButton.addEventListener('click', () => {\n    debugger;\n    toggleActiveButton(strengthButton);\n    displayRecommendedRepRange('strength');\n    exercise.goal = 'strength';\n    // exercise.repRange = '4-6 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  sizeButton.addEventListener('click', () => {\n    toggleActiveButton(sizeButton);\n    displayRecommendedRepRange('size');\n    exercise.goal = 'size';\n    // exercise.repRange = '8-12 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  enduranceButton.addEventListener('click', () => {\n    debugger;\n    toggleActiveButton(enduranceButton);\n    displayRecommendedRepRange('endurance');\n    exercise.goal = 'endurance';\n    // exercise.repRange = '15-20 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add('goal-buttons-container');\n  buttonsContainer.append(strengthButton, sizeButton, enduranceButton);\n  const exerciseInfo = document.createElement('div');\n  exerciseInfo.classList.add('exercise-info');\n  exerciseInfo.append(primaryMusclesTitle, primaryMuscles, secondaryMusclesTitle, secondaryMuscles, buttonsContainer);\n  exerciseInfoContainer.appendChild(exerciseInfo);\n\n  // create/append gif\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.alt = exercise.name;\n  const gifImage = await fetchGif(exercise.gifName);\n  gif.src = gifImage;\n  loadingIndicator.remove();\n  gifContainer.appendChild(gif);\n  exercise.gifUrl = gifImage;\n\n  // create/append instructions\n  // const steps = await fetchSteps(exercise.apiName);\n  // exercise.steps = steps;\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  exercise.steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = `  ${step}`;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n\n  // exerciseTitle.style.display = 'flex';\n  const exerciseTitle = document.createElement('div');\n  exerciseTitle.classList.add('exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  exerciseTitleContainer.append(exerciseTitle);\n\n  // const instructionsExerciseTitle = document.createElement('div');\n  // instructionsExerciseTitle.classList.add('instructions-exercise-title');\n  // instructionsExerciseTitle.innerText = 'Instructions';\n\n  // instructionsContainer.appendChild(instructionsExerciseTitle);\n  instructionsContainer.appendChild(exerciseSteps);\n  carouselInstance.addExerciseToCarousel(exercise);\n};\nconst displayRecommendedRepRange = workoutType => {\n  debugger;\n  let repRangeContainer = document.querySelector('.rep-range');\n  if (!repRangeContainer) {\n    repRangeContainer = document.createElement('div');\n    repRangeContainer.classList.add('rep-range');\n\n    // Append the rep range container to the exercise info container\n    const exerciseInfo = document.querySelector('.exercise-info');\n    exerciseInfo.appendChild(repRangeContainer);\n  } else {\n    repRangeContainer.innerText = ''; // Clear the existing inner text\n  }\n\n  let repRange;\n  if (workoutType === 'strength') {\n    repRange = '4-6 reps';\n  } else if (workoutType === 'size') {\n    repRange = '8-12 reps';\n  } else if (workoutType === 'endurance') {\n    repRange = '15-20 reps';\n  }\n  repRangeContainer.innerText = repRange;\n};\nconst toggleActiveButton = clickedButton => {\n  const buttons = Array.from(document.querySelectorAll('.goal-button'));\n  buttons.forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n};\nconst removeExerciseFromInfoContainer = nextExercise => {\n  if (nextExercise) displayExerciseInfo(nextExercise);else {\n    const exerciseTitle = document.querySelector('.exercise-title');\n    exerciseTitle.innerText = \"\";\n    exerciseTitle.style.display = 'none';\n    const instructionsContainer = document.querySelector('.instructions-container');\n    while (instructionsContainer.firstChild) {\n      instructionsContainer.removeChild(instructionsContainer.firstChild);\n    }\n    ;\n    const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n    while (exerciseInfoContainer.firstChild) {\n      exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n    }\n    ;\n    const gifContainer = document.querySelector('.gif-container');\n    if (gifContainer.firstChild) {\n      gifContainer.removeChild(gifContainer.firstChild);\n    }\n    ;\n  }\n};\nconst displayExerciseInfo = exercise => {\n  // change exercise name and remove appendages\n\n  const exerciseTitle = document.querySelector('.exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  const instructionsContainer = document.querySelector('.instructions-container');\n  // while (instructionsContainer.secondChild) {\n  instructionsContainer.removeChild(instructionsContainer.children[0]);\n  // };\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  exercise.steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = step;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n  instructionsContainer.appendChild(exerciseSteps);\n  const primaryMuscles = document.querySelector('.primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMuscles = document.querySelector('.secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\" \")}`;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n  const goalButtons = document.querySelectorAll('.goal-button');\n  goalButtons.forEach(button => button.classList.remove('active'));\n  const button = document.querySelector(`.goal-button[data-goal=\"${exercise.goal}\"]`);\n  debugger;\n  if (button) {\n    button.classList.add('active');\n    displayRecommendedRepRange(exercise.goal);\n  } else {\n    const repRangeElement = document.querySelector('.rep-range');\n    if (repRangeElement) {\n      repRangeElement.innerText = '';\n    }\n  }\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.src = exercise.gifUrl;\n  gif.alt = exercise.name;\n  gifContainer.appendChild(gif);\n};\n\n// const fetchSteps = async (exerciseName) => {\n//     const encodedName = encodeURIComponent(exerciseName);\n//     const url = `https://musclewiki.p.rapidapi.com/exercises?name=${encodedName}`;\n//     const options = {\n//         method: 'GET',\n//         headers: {\n//             'X-RapidAPI-Key': '3af8ef8f2dmshc6efeb993784441p1a7439jsn93b2667827e7',\n//             'X-RapidAPI-Host': 'musclewiki.p.rapidapi.com'\n//         }\n//     };\n//     try {\n//         const response = await fetch(url, options);\n//         const result = await response.json();\n//         const exercise = result[0];\n//         return exercise.steps;\n//     } catch (error) {\n//         console.error(error);\n//         return null;\n//     }\n// };\n\nconst fetchGif = async exerciseName => {\n  const encodedName = encodeURIComponent(exerciseName);\n  const url = `https://exercisedb.p.rapidapi.com/exercises/name/${encodedName}`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '3af8ef8f2dmshc6efeb993784441p1a7439jsn93b2667827e7',\n      'X-RapidAPI-Host': 'exercisedb.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    const gifUrl = result[0].gifUrl;\n    return gifUrl;\n  } catch (error) {\n    console.error(error);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/exercises.js\n");

/***/ }),

/***/ "./src/scripts/muscleMap.js":
/*!**********************************!*\
  !*** ./src/scripts/muscleMap.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises.js */ \"./src/scripts/exercises.js\");\n\nclass MuscleMap {\n  constructor(containerEl, myCarousel) {\n    this.container = containerEl;\n    this.myCarousel = myCarousel;\n    this.render();\n    this.renderBack();\n    this.renderToggleButton();\n    this.handleClickGenerateExercise = this.handleClickGenerateExercise.bind(this);\n    this.bindEvents();\n    this.onCooldown = false;\n  }\n  render() {\n    const muscleMap = document.createElement('div');\n    muscleMap.classList.add('muscle-map');\n    const head = document.createElement('div');\n    head.classList.add('head');\n    const chest = document.createElement('div');\n    chest.classList.add('chest');\n    const leftChest = document.createElement('div');\n    leftChest.classList.add('left-chest');\n    chest.appendChild(leftChest);\n    const rightChest = document.createElement('div');\n    rightChest.classList.add('right-chest');\n    chest.appendChild(rightChest);\n    const back = document.createElement('div');\n    back.classList.add('back');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftBicep = document.createElement('div');\n    leftBicep.classList.add('left-bicep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightBicep = document.createElement('div');\n    rightBicep.classList.add('right-bicep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const absContainer = document.createElement('div');\n    absContainer.classList.add('abs');\n    for (let i = 0; i < 6; i++) {\n      const abs = document.createElement('div');\n      absContainer.appendChild(abs);\n    }\n    ;\n    const leftGlute = document.createElement('div');\n    leftGlute.classList.add('left-glute');\n    const leftQuad = document.createElement('div');\n    leftQuad.classList.add('left-quad');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightGlute = document.createElement('div');\n    rightGlute.classList.add('right-glute');\n    const rightQuad = document.createElement('div');\n    rightQuad.classList.add('right-quad');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMap.appendChild(head);\n    muscleMap.appendChild(chest);\n    muscleMap.appendChild(back);\n    muscleMap.appendChild(leftShoulder);\n    muscleMap.appendChild(leftBicep);\n    muscleMap.appendChild(leftForearm);\n    muscleMap.appendChild(leftHand);\n    muscleMap.appendChild(rightShoulder);\n    muscleMap.appendChild(rightForearm);\n    muscleMap.appendChild(rightBicep);\n    muscleMap.appendChild(rightHand);\n    muscleMap.appendChild(absContainer);\n    muscleMap.appendChild(leftGlute);\n    muscleMap.appendChild(leftQuad);\n    muscleMap.appendChild(leftCalf);\n    muscleMap.appendChild(leftFoot);\n    muscleMap.appendChild(rightGlute);\n    muscleMap.appendChild(rightQuad);\n    muscleMap.appendChild(rightCalf);\n    muscleMap.appendChild(rightFoot);\n    this.container.appendChild(muscleMap);\n  }\n  renderBack() {\n    const muscleMapBack = document.createElement('div');\n    muscleMapBack.classList.add('muscle-map-back');\n    const head2 = document.createElement('div');\n    head2.classList.add('head-2');\n    const back2 = document.createElement('div');\n    back2.classList.add('back-2');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftTricep = document.createElement('div');\n    leftTricep.classList.add('left-tricep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightTricep = document.createElement('div');\n    rightTricep.classList.add('right-tricep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const leftGlute2 = document.createElement('div');\n    leftGlute2.classList.add('left-glute-2');\n    const rightGlute2 = document.createElement('div');\n    rightGlute2.classList.add('right-glute-2');\n    const leftHamstring = document.createElement('div');\n    leftHamstring.classList.add('left-hamstring');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightHamstring = document.createElement('div');\n    rightHamstring.classList.add('right-hamstring');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMapBack.appendChild(head2);\n    muscleMapBack.appendChild(back2);\n    muscleMapBack.appendChild(leftShoulder);\n    muscleMapBack.appendChild(leftTricep);\n    muscleMapBack.appendChild(leftForearm);\n    muscleMapBack.appendChild(leftHand);\n    muscleMapBack.appendChild(rightShoulder);\n    muscleMapBack.appendChild(rightForearm);\n    muscleMapBack.appendChild(rightTricep);\n    muscleMapBack.appendChild(rightHand);\n    muscleMapBack.appendChild(leftGlute2);\n    muscleMapBack.appendChild(leftHamstring);\n    muscleMapBack.appendChild(leftCalf);\n    muscleMapBack.appendChild(leftFoot);\n    muscleMapBack.appendChild(rightGlute2);\n    muscleMapBack.appendChild(rightHamstring);\n    muscleMapBack.appendChild(rightCalf);\n    muscleMapBack.appendChild(rightFoot);\n    this.container.appendChild(muscleMapBack);\n  }\n  toggleView() {\n    const frontView = this.container.querySelector('.muscle-map');\n    const backView = this.container.querySelector('.muscle-map-back');\n    if (frontView.style.display !== 'none') {\n      frontView.style.display = 'none';\n      backView.style.display = 'grid';\n    } else {\n      frontView.style.display = 'grid';\n      backView.style.display = 'none';\n    }\n  }\n  bindEvents() {\n    this.addEventListeners();\n    const toggleButton = document.getElementById('toggle-view');\n    toggleButton.addEventListener('click', this.toggleView.bind(this));\n  }\n  renderToggleButton() {\n    const toggleButton = document.createElement('button');\n    toggleButton.id = 'toggle-view';\n    toggleButton.innerText = \"FLIP\";\n    this.container.appendChild(toggleButton);\n  }\n  addEventListeners() {\n    const muscleBlocks = Array.from(document.querySelectorAll('.muscle-map div:not(.head, .abs div, .chest, .left-chest, .right-chest), .muscle-map-back div:not(.head-2)'));\n    muscleBlocks.forEach(muscleBlock => {\n      muscleBlock.addEventListener('click', () => {\n        this.handleClickGenerateExercise(muscleBlock);\n        this.addAnimation(muscleBlock);\n      });\n    });\n    const chest = document.querySelector('.chest');\n    chest.addEventListener('click', () => {\n      this.handleClickGenerateExercise(chest);\n      const leftChest = chest.querySelector('.left-chest');\n      const rightChest = chest.querySelector('.right-chest');\n      this.addAnimation(leftChest);\n      this.addAnimation(rightChest);\n    });\n  }\n  addAnimation(element) {\n    element.classList.add('animate');\n    element.addEventListener('animationend', () => {\n      element.classList.remove('animate');\n    });\n  }\n  handleClickGenerateExercise(muscleBlock) {\n    if (this.onCooldown) {\n      return;\n    }\n    if (this.myCarousel.storedExercises.length < 4) {\n      (0,_exercises_js__WEBPACK_IMPORTED_MODULE_0__.generateExercise)(muscleBlock, this.myCarousel);\n      this.startCooldown();\n    } else {\n      muscleBlock.removeEventListener('click', () => {});\n    }\n  }\n  startCooldown() {\n    this.onCooldown = true;\n    setTimeout(() => {\n      this.onCooldown = false;\n    }, 2000);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MuscleMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/muscleMap.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teWZpdG5lc3NidWRkeS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;