/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/muscleMap */ \"./src/scripts/muscleMap.js\");\n/* harmony import */ var _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/carousel */ \"./src/scripts/carousel.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const storedExercises = [];\n  const carouselContainer = document.querySelector('.carousel-container');\n  const myCarousel = new _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__[\"default\"](carouselContainer, storedExercises);\n  const bodyContainer = document.querySelector('.body-container');\n  new _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](bodyContainer, myCarousel);\n  document.querySelector('.main-title').addEventListener(\"click\", () => {\n    location.reload();\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTRDO0FBQ0Y7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUVoRCxNQUFNQyxlQUFlLEdBQUcsRUFBRTtFQUMxQixNQUFNQyxpQkFBaUIsR0FBR0gsUUFBUSxDQUFDSSxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdkUsTUFBTUMsVUFBVSxHQUFHLElBQUlOLHlEQUFRLENBQUNJLGlCQUFpQixFQUFFRCxlQUFlLENBQUM7RUFFbkUsTUFBTUksYUFBYSxHQUFHTixRQUFRLENBQUNJLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztFQUMvRCxJQUFJTiwwREFBUyxDQUFDUSxhQUFhLEVBQUVELFVBQVUsQ0FBQztFQUV4Q0wsUUFBUSxDQUFDSSxhQUFhLENBQUMsYUFBYSxDQUFDLENBQUNILGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFNO0lBQ2xFTSxRQUFRLENBQUNDLE1BQU0sQ0FBQyxDQUFDO0VBQ3JCLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215Zml0bmVzc2J1ZGR5Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE11c2NsZU1hcCBmcm9tICcuL3NjcmlwdHMvbXVzY2xlTWFwJztcbmltcG9ydCBDYXJvdXNlbCBmcm9tICcuL3NjcmlwdHMvY2Fyb3VzZWwnO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuXG4gICAgY29uc3Qgc3RvcmVkRXhlcmNpc2VzID0gW107XG4gICAgY29uc3QgY2Fyb3VzZWxDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwtY29udGFpbmVyJyk7XG4gICAgY29uc3QgbXlDYXJvdXNlbCA9IG5ldyBDYXJvdXNlbChjYXJvdXNlbENvbnRhaW5lciwgc3RvcmVkRXhlcmNpc2VzKTtcblxuICAgIGNvbnN0IGJvZHlDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYm9keS1jb250YWluZXInKTtcbiAgICBuZXcgTXVzY2xlTWFwKGJvZHlDb250YWluZXIsIG15Q2Fyb3VzZWwpO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1haW4tdGl0bGUnKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9KVxufSk7XG4iXSwibmFtZXMiOlsiTXVzY2xlTWFwIiwiQ2Fyb3VzZWwiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdG9yZWRFeGVyY2lzZXMiLCJjYXJvdXNlbENvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJteUNhcm91c2VsIiwiYm9keUNvbnRhaW5lciIsImxvY2F0aW9uIiwicmVsb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/carousel.js":
/*!*********************************!*\
  !*** ./src/scripts/carousel.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises */ \"./src/scripts/exercises.js\");\n\nclass Carousel {\n  constructor(containerEl, storedExercises) {\n    this.container = containerEl;\n    this.render();\n    this.storedExercises = storedExercises;\n  }\n  render() {\n    const carousel = document.createElement(\"div\");\n    carousel.classList.add(\"carousel\");\n    const carouselNav = document.createElement(\"div\");\n    carouselNav.classList.add(\"carousel-nav\");\n    this.carouselNav = carouselNav;\n    const carouselSlides = document.createElement(\"div\");\n    carouselSlides.classList.add(\"carousel-slides\");\n    this.carouselSlides = carouselSlides;\n    const exerciseTitle = document.createElement(\"div\");\n    exerciseTitle.classList.add(\"my-exercises\");\n    exerciseTitle.innerText = \"My Exercises\";\n    this.container.appendChild(carousel);\n    carousel.style.display = \"none\";\n    carousel.append(exerciseTitle, carouselNav, carouselSlides);\n  }\n  addExerciseToCarousel(exercise) {\n    const carouselItem = document.createElement(\"div\");\n    carouselItem.classList.add(\"carousel-item\");\n    carouselItem.id = `carousel-item-${document.querySelectorAll(\".carousel-item\").length + 1}`;\n    const carouselItemTitle = document.createElement('div');\n    carouselItemTitle.classList.add('carousel-item-title');\n    carouselItemTitle.innerText = exercise.name;\n    const carouselItemType = document.createElement('div');\n    carouselItemType.classList.add('carousel-item-type');\n    carouselItemType.innerText = exercise.type;\n    const closeButton = document.createElement(\"button\");\n    closeButton.classList.add(\"carousel-item-close-button\");\n    closeButton.innerText = \"X\";\n    if (this.carouselSlides.children.length === 4) {\n      return;\n    }\n    this.carouselSlides.appendChild(carouselItem);\n    carouselItem.append(carouselItemTitle, carouselItemType, closeButton);\n    if (this.carouselSlides.children.length === 1) {\n      this.container.querySelector(\".carousel\").style.display = \"block\";\n    }\n    carouselItem.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    const numItems = document.querySelectorAll(\".carousel-item\").length;\n    const newNavItem = document.createElement(\"a\");\n    const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n    navItems.forEach(navItem => navItem.classList.remove('active'));\n    newNavItem.classList.add('active');\n    newNavItem.href = `#carousel-item-${numItems}`;\n    newNavItem.textContent = numItems.toString();\n    newNavItem.dataset.exerciseName = exercise.name;\n    this.carouselNav.appendChild(newNavItem);\n    newNavItem.addEventListener('click', event => {\n      const exerciseName = event.target.dataset.exerciseName;\n      const updatedExercise = this.storedExercises.find(exercise => exercise.name === exerciseName);\n      if (updatedExercise) {\n        (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.displayExerciseInfo)(updatedExercise);\n      }\n      const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n      navItems.forEach(navItem => navItem.classList.remove('active'));\n      event.target.classList.add('active');\n    });\n    closeButton.addEventListener('click', () => {\n      let nextActiveCarouselItem = carouselItem.nextElementSibling || carouselItem.previousElementSibling;\n      const allCarouselItems = this.carouselSlides.querySelectorAll('.carousel-item');\n      allCarouselItems.forEach(item => item.classList.remove('active'));\n      const allNavItems = this.carouselNav.querySelectorAll('a');\n      allNavItems.forEach(item => item.classList.remove('active'));\n      const nextExercise = this.removeExerciseFromCarousel(carouselItem);\n      (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.removeExerciseFromInfoContainer)(nextExercise);\n      if (nextActiveCarouselItem) {\n        nextActiveCarouselItem.classList.add('active');\n        const nextActiveCarouselItemId = nextActiveCarouselItem.id.split(\"-\")[2];\n        const nextActiveNavItem = this.carouselNav.querySelector(`a[href=\"#carousel-item-${nextActiveCarouselItemId}\"]`);\n        if (nextActiveNavItem) {\n          nextActiveNavItem.classList.add('active');\n        }\n      }\n    });\n    this.storedExercises.push(exercise);\n  }\n  removeExerciseFromCarousel(carouselItem) {\n    const itemId = carouselItem.id.split(\"-\")[2];\n    const navItem = document.querySelector(`.carousel-nav a[href=\"#carousel-item-${itemId}\"]`);\n    this.carouselNav.removeChild(navItem);\n    this.carouselSlides.removeChild(carouselItem);\n    const exerciseName = carouselItem.querySelector('.carousel-item-title').innerText;\n    const exerciseIndex = this.storedExercises.findIndex(exercise => exercise.name === exerciseName);\n    this.storedExercises.splice(exerciseIndex, 1);\n    if (this.carouselSlides.children.length === 0) {\n      this.container.querySelector(\".carousel\").style.display = \"none\"; // Hide the carousel when all exercises are removed\n    }\n\n    let nextExerciseIndex = exerciseIndex;\n    if (nextExerciseIndex >= this.storedExercises.length) {\n      nextExerciseIndex = this.storedExercises.length - 1; // If we've removed the last exercise, take the one before it\n    }\n\n    this.renumberCarouselItemsAndNavItems();\n    return this.storedExercises[nextExerciseIndex];\n  }\n  renumberCarouselItemsAndNavItems() {\n    const carouselItems = Array.from(this.carouselSlides.children);\n    const navItems = Array.from(this.carouselNav.querySelectorAll('a'));\n    carouselItems.forEach((item, index) => {\n      item.id = `carousel-item-${index + 1}`;\n      const navItem = navItems[index];\n      navItem.href = `#carousel-item-${index + 1}`;\n      navItem.textContent = (index + 1).toString();\n      navItem.classList.remove('active');\n    });\n    const activeCarouselItem = this.carouselSlides.querySelector('.carousel-item.active');\n    if (activeCarouselItem) {\n      const activeItemId = activeCarouselItem.id.split(\"-\")[2];\n      const activeNavItem = this.carouselNav.querySelector(`a[href=\"#carousel-item-${activeItemId}\"]`);\n      if (activeNavItem) {\n        activeNavItem.classList.add('active');\n      }\n    }\n  }\n  updateStoredExercise(updatedExercise) {\n    const index = this.storedExercises.findIndex(exercise => exercise.name === updatedExercise.name);\n    if (index !== -1) {\n      this.storedExercises[index] = updatedExercise;\n    }\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Carousel);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/carousel.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"backExercises\": function() { return /* binding */ backExercises; },\n/* harmony export */   \"bicepExercises\": function() { return /* binding */ bicepExercises; },\n/* harmony export */   \"calfExercises\": function() { return /* binding */ calfExercises; },\n/* harmony export */   \"chestExercises\": function() { return /* binding */ chestExercises; },\n/* harmony export */   \"coreExercises\": function() { return /* binding */ coreExercises; },\n/* harmony export */   \"forearmExercises\": function() { return /* binding */ forearmExercises; },\n/* harmony export */   \"gluteExercises\": function() { return /* binding */ gluteExercises; },\n/* harmony export */   \"hamstringExercises\": function() { return /* binding */ hamstringExercises; },\n/* harmony export */   \"quadExercises\": function() { return /* binding */ quadExercises; },\n/* harmony export */   \"shoulderExercises\": function() { return /* binding */ shoulderExercises; },\n/* harmony export */   \"tricepExercises\": function() { return /* binding */ tricepExercises; }\n/* harmony export */ });\nconst shoulderExercises = [{\n  type: 'SHOULDERS',\n  name: 'Seated Dumbbell Press',\n  gifName: \"dumbbell seated shoulder press\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids', 'Triceps'],\n  steps: [\"Sit on a bench with back support. Raise the dumbbells to shoulder height with your palms forward.\", \"Raise the dumbbells upwards and pause at the contracted position.\", \"Lower the weights back to starting position.\"]\n},\n// {\n//     type: 'SHOULDERS',\n//     name: 'Arnold Press',\n//     apiName: \"Dumbbell Seated Arnold Press\",\n//     primaryMuscles: ['Anterior and Lateral Deltoids'],\n//     secondaryMuscles: ['Triceps'],\n//     suggestedRepRange: '10-15 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/yj8v4s87LiY57Y\"\n// },\n{\n  type: 'SHOULDERS',\n  name: 'Dumbbell Lateral Raise',\n  gifName: \"dumbbell lateral raise\",\n  primaryMuscles: ['Lateral Deltoids'],\n  secondaryMuscles: ['Anterior and Posterior Deltoids'],\n  steps: [\"Stand up straight with dumbbells at either side, palms facing your hips.\", \"Raise your arms on either side with a slight bend in your elbow until they are parallel with the floor. Pause at the top of the motion.\", \"Slowly return your arms down to starting position.\"]\n}, {\n  type: 'SHOULDERS',\n  name: 'Dumbbell Front Raise',\n  gifName: \"dumbbell front raise\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids'],\n  steps: [\"Grab two dumbbells while standing upright with the dumbbells at your side.\", \"Raise the two dumbbells with your elbows being fully extended until the dumbbells are eye level.\", \"Lower the weights in a controlled manner to the starting position and repeat.\"]\n}\n// {\n//     type: 'SHOULDERS',\n//     name: 'Reverse Fly',\n//     apiName: \"Dumbbell Laying Reverse Fly\",\n//     primaryMuscles: ['Posterior Deltoids'],\n//     secondaryMuscles: ['Trapezius', 'Rhomboids'],\n//     suggestedRepRange: '10-15 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/t6GtGbr8C87HgB\"\n// }\n];\n\nconst chestExercises = [{\n  type: 'CHEST',\n  name: 'Barbell Bench Press',\n  gifName: 'barbell bench press',\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  steps: [\"Lay flat on the bench with your feet on the ground. With straight arms unrack the bar.\", \"Lower the bar to your mid chest\", \"Raise the bar until you've locked your elbows.\"]\n}, {\n  type: 'CHEST',\n  name: 'Push-Ups',\n  gifName: \"deep push up\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  steps: [\"Place your hands firmly on the ground, directly under shoulders.\", \"Flatten your back so your entire body is straight and slowly lower your body\", \"Draw shoulder blades back and down, keeping elbows tucked close to your body\", \"Exhale as you push back to the starting position.\"]\n}, {\n  type: 'CHEST',\n  name: 'Dumbbell Fly',\n  gifName: \"dumbbell fly\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  steps: [\"Lay flat on the bench and place your feet on the ground.\", \"Begin the exercise with the dumbbells held together above your chest, elbows slightly bent.\", \"Simultaneously lower the weights to either side.\", \"Pause when the weights are parallel to the bench, then raise your arms to the starting position.\"]\n},\n// {\n//     type: 'CHEST',\n//     name: 'Incline Bench Press',\n//     apiName: \"Barbell Incline Bench Press\",\n//     primaryMuscles: ['Upper Pectoralis Major'],\n//     secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n//     suggestedRepRange: '8-12 reps',\n//     gifUrl: \"https://api.exercisedb.io/image/LEHuMI0sJlp8p7\"\n// },\n{\n  type: 'CHEST',\n  name: 'Cable Crossover',\n  gifName: 'cable standing fly',\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  steps: [\"Use a handle attachment set all the way to the bottom of the machine.\", \"Bring both of the handles to your chest and make sure you are in the center of the cable crossover.\", \"Walk a few steps forward.\", \"Then press the weight forward. From there, your shoulders should horizontally abduct and adduct while your elbows stay in a fixed position.\"]\n}];\nconst bicepExercises = [{\n  type: 'UPPER ARMS',\n  name: 'Barbell Curl',\n  gifName: \"barbell curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"While holding the upper arms stationary, curl the weights forward while contracting the biceps as you breathe out.\", \"Continue the movement until your biceps are fully contracted and the bar is at shoulder level.\", \"Hold the contracted position for a second and squeeze the biceps hard.\", \"Slowly bring the weight back down to the starting position.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Dumbbell Curl',\n  gifName: \"dumbbell alternate biceps curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"Stand up straight with a dumbbell in each hand at arm's length.\", \"Raise one dumbbell and twist your forearm until it is vertical and your palm faces the shoulder.\", \"Lower to original position and repeat with opposite arm.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Preacher Curl',\n  gifName: \"dumbbell alternate preacher curl\",\n  primaryMuscles: ['Biceps Brachii'],\n  secondaryMuscles: ['Brachialis', 'Brachioradialis'],\n  steps: [\"Start with a with a dumbbell in one hand and your elbow resting on the bench.\", \"From this starting position, curl the dumbbell up towards your shoulder, keeping your upper arm stationary on the bench.\"]\n}];\nconst tricepExercises = [{\n  type: 'UPPER ARMS',\n  name: 'Cable Push Down',\n  gifName: \"cable pushdown\",\n  primaryMuscles: ['Triceps Brachii'],\n  secondaryMuscles: ['Anconeus'],\n  steps: [\"You can use any attachment for this. The cable should be set all the way at the top of the machine.\", \"Make sure to keep your upper arm glued at your side. Extend your elbows until you feel your triceps contract.\"]\n}, {\n  type: 'UPPER ARMS',\n  name: 'Skull Crusher',\n  gifName: \"barbell lying triceps extension skull crusher\",\n  primaryMuscles: ['Triceps Brachii'],\n  secondaryMuscles: ['Anconeus', 'Deltoids'],\n  steps: [\"Take a shoulder width grip. Break at the elbows. Try to keep your elbows tucked in. Don't let them flare out.\", \"Stop the bar a few inches from your forehead and extend your elbows back up.\"]\n}];\nconst backExercises = [{\n  type: 'BACK',\n  name: 'Barbell Bent Over Row',\n  gifName: \"barbell bent over row\",\n  primaryMuscles: ['Latissimus Dorsi', 'Rhomboids', 'Trapezius'],\n  secondaryMuscles: ['Biceps Brachii', 'Brachialis', 'Brachioradialis'],\n  steps: [\"Grab a barbell with a shoulder width pronated or supinated grip.\", \"Bend forward at your hips while maintaining a flat back.\", \"Pull the weight toward your upper abdomen.\", \"Lower the weight in a controlled manner and repeat.\"]\n}, {\n  type: 'BACK',\n  name: 'Lat Pulldown',\n  gifName: \"cable pulldown\",\n  primaryMuscles: ['Latissimus Dorsi'],\n  secondaryMuscles: ['Rhomboids', 'Trapezius', 'Brachialis', 'Brachioradialis'],\n  steps: [\"Grip the bar with the palms facing forward, your hands need to be spaced out at a distance wider than shoulder width.\", \"As you have both arms extended in front of you holding the bar, bring your torso back around 30 degrees while sticking your chest out.\", \"Pull the bar down to about chin level or a little lower in a smooth movement whilst squeezing the shoulder blades together.\", \"After a second of squeezing, slowly raise the bar back to the starting position when your arms are fully extended.\"]\n}];\nconst forearmExercises = [{\n  type: 'LOWER ARMS',\n  name: 'Seated Dumbbell Wrist Curl',\n  gifName: \"dumbbell seated palms up wrist curl\",\n  primaryMuscles: ['Flexor Carpi Radialis', 'Flexor Carpi Ulnaris'],\n  secondaryMuscles: ['Flexor Digitorum Superficialis'],\n  steps: [\"Grip the dumbbell with your palm facing upwards with your forearm rested against the bench.\", \"Slowly curl your wrist upwards in a semicircular motion.\", \"Return to starting position and repeat.\"]\n}];\nconst coreExercises = [{\n  type: 'CORE',\n  name: 'Barbell Rollouts',\n  gifName: \"barbell rollerout\",\n  primaryMuscles: ['Rectus Abdominis'],\n  secondaryMuscles: ['Obliques', 'Transverse Abdominis', 'Erector Spinae'],\n  steps: [\"Hold the Barbell with both hands and kneel on the floor with your feet up\", \"Slowly roll the Barbell straight forward, stretching your body into a straight position.\", \"After a pause at the stretched position, start pulling yourself back to the starting position. This should be a slow and controlled movement.\"]\n}, {\n  type: 'CORE',\n  name: 'Crunches',\n  gifName: \"crunch floor\",\n  primaryMuscles: ['Rectus Abdominis'],\n  secondaryMuscles: ['Obliques', 'Transverse Abdominis'],\n  steps: [\"Lay flat on your back with your knees bent and your feet flat on the ground, about a foot from your lower back.\", \"Place your fingertips on your temples with your palms facing out.\", \"Draw your belly into the base of your spine to engage the muscles, then raise your head and shoulders off the floor.\", \"Return to starting position and repeat.\"]\n}];\nconst gluteExercises = [{\n  type: 'GLUTES',\n  name: 'Barbell Hip Thrust',\n  gifName: \"barbell glute bridge\",\n  primaryMuscles: ['Gluteus Maximus'],\n  secondaryMuscles: ['Hamstrings', 'Core Stabilizers'],\n  steps: [\"Sit on the ground with a bench behind you. Have the barbell over your legs just above your hips.\", \"Lean back against the bench so that your shoulders are resting upon it, stretch your arms out to either side using the bench as support.\", \"Raise the weight by driving through your feet and extending your hips upwards. Support the weight with your shoulders and feet.\", \"Slowly extend as far as you can, and then slowly return to the starting position.\"]\n}, {\n  type: 'GLUTES',\n  name: 'Cable Pull Through',\n  gifName: \"cable pull through (with rope)\",\n  primaryMuscles: ['Gluteus Maximus'],\n  secondaryMuscles: ['Hamstrings'],\n  steps: [\"This exercise works best with a rope attachment but can be done with anything. The attachment should be set to the bottom of the machine.\", \"Face away from the cable machine, straddle the cable itself, and grab the attachment. Walk a few steps away.\", \"Break at the hips while maintaining a flat back and mostly extended knees.\", \"Push hips forward until you are back in a standing position.\"]\n}];\nconst quadExercises = [{\n  type: 'QUADS',\n  name: 'Barbell Squat',\n  gifName: \"barbell bench squat\",\n  primaryMuscles: ['Quadriceps'],\n  secondaryMuscles: ['Gluteus Maximus', 'Hamstrings', 'Erector Spinae'],\n  steps: [\"Stand with your feet shoulder-width apart. Maintain the natural arch in your back, squeezing your shoulder blades and raising your chest.\", \"Grip the bar across your shoulders and support it on your upper back. Unwrack the bar by straightening your legs, and take a step back.\", \"Bend your knees as you lower the weight without altering the form of your back until your hips are below your knees.\", \"Raise the bar back to starting position, lift with your legs and exhale at the top.\"]\n}, {\n  type: 'QUADS',\n  name: 'Dumbbell Goblet Squat',\n  gifName: \"dumbbell goblet squat\",\n  primaryMuscles: ['Quadriceps'],\n  secondaryMuscles: ['Gluteus Maximus', 'Hamstrings', 'Erector Spinae'],\n  steps: [\"Hold the weight tucked into your upper chest area, keeping your elbows in. Your feet should be slightly wider than shoulder width.\", \"Sink down into the squat, keeping your elbows inside the track of your knees.\", \"Push through your heels while keeping your chest up and return to starting position.\"]\n}];\nconst hamstringExercises = [{\n  type: 'HAMSTRINGS',\n  name: 'Dumbbell Romanian Deadlift',\n  gifName: \"dumbbell romanian deadlift\",\n  primaryMuscles: ['Hamstrings'],\n  secondaryMuscles: ['Gluteus Maximus', 'Erector Spinae'],\n  steps: [\"Stand with a shoulder width stance. Push your butt back while leaving your knees MOSTLY extended.\", \"You should feel a stretch in your hamstrings. When you feel the stretch, push your hips forward to complete the rep.\", \"Do not push your hips all the way forward. This will hyperextend your spine. Just go to a normal standing position.\"]\n}, {\n  type: 'HAMSTRINGS',\n  name: 'Machine Hamstring Curl',\n  gifName: \"lever lying two-one leg curl\",\n  primaryMuscles: ['Hamstrings'],\n  secondaryMuscles: ['Calves', 'Gluteus Minimus'],\n  steps: [\"Lay down on the machine, placing your legs beneath the padded lever. Position your legs so that the padded lever is below your calve muscles.\", \"Support yourself by grabbing the side handles of the machine, and slowly raise the weight with your legs, toes pointed straight.\", \"Pause at the apex of the motion, then slowly return to starting position.\"]\n}];\nconst calfExercises = [{\n  type: 'CALVES',\n  name: 'Dumbbell Calf Raises',\n  gifName: \"dumbbell standing calf raise\",\n  primaryMuscles: ['Gastrocnemius'],\n  secondaryMuscles: ['Soleus'],\n  steps: [\"Stand tall with your feet on the ground. You can put the balls of your feet on top of a plate to extend the range of motion.\", \"Imagine you have a string attached to your heels and pull your heels up toward the ceiling.\"]\n}, {\n  type: 'CALVES',\n  name: 'Barbell Calf Raise',\n  gifName: \"barbell standing calf raise\",\n  primaryMuscles: ['Gastrocnemius', 'Soleus'],\n  secondaryMuscles: ['Anterior Tibialis'],\n  steps: [\"Begin by standing on a raised surface (such as a step or box) with the balls of your feet on the edge of the surface and your heels hanging off.\", \"Hold a barbell across your upper back and shoulders, using an overhand grip.\", \"Keeping your core engaged and your back straight, push through the balls of your feet to raise your heels up as high as you can.\", \"Lower your heels back down to the starting position, allowing your calves to stretch.\"]\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/scripts/exercises.js":
/*!**********************************!*\
  !*** ./src/scripts/exercises.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"displayExerciseInfo\": function() { return /* binding */ displayExerciseInfo; },\n/* harmony export */   \"generateExercise\": function() { return /* binding */ generateExercise; },\n/* harmony export */   \"removeExerciseFromInfoContainer\": function() { return /* binding */ removeExerciseFromInfoContainer; }\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/scripts/data.js\");\n\nconst exercises = {\n  'chest': _data_js__WEBPACK_IMPORTED_MODULE_0__.chestExercises,\n  'left-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'right-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'left-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises,\n  'right-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises,\n  'left-tricep': _data_js__WEBPACK_IMPORTED_MODULE_0__.tricepExercises,\n  'right-tricep': _data_js__WEBPACK_IMPORTED_MODULE_0__.tricepExercises,\n  'left-forearm': _data_js__WEBPACK_IMPORTED_MODULE_0__.forearmExercises,\n  'right-forearm': _data_js__WEBPACK_IMPORTED_MODULE_0__.forearmExercises,\n  'abs': _data_js__WEBPACK_IMPORTED_MODULE_0__.coreExercises,\n  'back-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.backExercises,\n  'left-glute-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.gluteExercises,\n  'right-glute-2': _data_js__WEBPACK_IMPORTED_MODULE_0__.gluteExercises,\n  'left-quad': _data_js__WEBPACK_IMPORTED_MODULE_0__.quadExercises,\n  'right-quad': _data_js__WEBPACK_IMPORTED_MODULE_0__.quadExercises,\n  'left-hamstring': _data_js__WEBPACK_IMPORTED_MODULE_0__.hamstringExercises,\n  'right-hamstring': _data_js__WEBPACK_IMPORTED_MODULE_0__.hamstringExercises,\n  'left-calf': _data_js__WEBPACK_IMPORTED_MODULE_0__.calfExercises,\n  'right-calf': _data_js__WEBPACK_IMPORTED_MODULE_0__.calfExercises\n};\nconst generateExercise = async (muscleBlock, carouselInstance) => {\n  const exercisesByMuscleBlock = exercises[muscleBlock.classList[0]];\n  debugger;\n  // keep assigning an exercise until it's NOT in storedExercises\n  let exercise;\n  do {\n    const randomIndex = Math.floor(Math.random() * exercisesByMuscleBlock.length);\n    exercise = exercisesByMuscleBlock[randomIndex];\n  } while (carouselInstance.storedExercises.includes(exercise));\n\n  // check if anything exists on the R side\n  const instructionsContainer = document.querySelector('.instructions-container');\n  while (instructionsContainer.firstChild) {\n    instructionsContainer.removeChild(instructionsContainer.firstChild);\n  }\n  ;\n  const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n  while (exerciseInfoContainer.firstChild) {\n    exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n  }\n  ;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n  const loadingIndicator = document.createElement('div');\n  loadingIndicator.classList.add('loading');\n  loadingIndicator.innerText = \"Fetching GIF...\";\n  gifContainer.appendChild(loadingIndicator);\n  debugger;\n  const exerciseTitleContainer = document.querySelector('.exercise-title-container');\n  if (exerciseTitleContainer.firstChild) {\n    exerciseTitleContainer.removeChild(exerciseTitleContainer.firstChild);\n  }\n\n  // create/append exerciseInfo\n  const primaryMusclesTitle = document.createElement('div');\n  primaryMusclesTitle.classList.add('primary-muscles-title');\n  primaryMusclesTitle.innerText = 'Primary Muscles';\n  const primaryMuscles = document.createElement('div');\n  primaryMuscles.classList.add('primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMusclesTitle = document.createElement('div');\n  secondaryMusclesTitle.classList.add('secondary-muscles-title');\n  secondaryMusclesTitle.innerText = 'Secondary Muscles';\n  const secondaryMuscles = document.createElement('div');\n  secondaryMuscles.classList.add('secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\", \")}`;\n  const strengthButton = document.createElement('button');\n  strengthButton.classList.add('goal-button');\n  strengthButton.innerText = 'Strength';\n  strengthButton.dataset.goal = 'strength';\n  const sizeButton = document.createElement('button');\n  sizeButton.classList.add('goal-button');\n  sizeButton.innerText = 'Size';\n  sizeButton.dataset.goal = 'size';\n  const enduranceButton = document.createElement('button');\n  enduranceButton.classList.add('goal-button');\n  enduranceButton.innerText = 'Endurance';\n  enduranceButton.dataset.goal = 'endurance';\n  strengthButton.addEventListener('click', () => {\n    toggleActiveButton(strengthButton);\n    displayRecommendedRepRange('strength');\n    exercise.goal = 'strength';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  sizeButton.addEventListener('click', () => {\n    toggleActiveButton(sizeButton);\n    displayRecommendedRepRange('size');\n    exercise.goal = 'size';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  enduranceButton.addEventListener('click', () => {\n    debugger;\n    toggleActiveButton(enduranceButton);\n    displayRecommendedRepRange('endurance');\n    exercise.goal = 'endurance';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add('goal-buttons-container');\n  buttonsContainer.append(strengthButton, sizeButton, enduranceButton);\n  const exerciseInfo = document.createElement('div');\n  exerciseInfo.classList.add('exercise-info');\n  exerciseInfo.append(primaryMusclesTitle, primaryMuscles, secondaryMusclesTitle, secondaryMuscles, buttonsContainer);\n  exerciseInfoContainer.appendChild(exerciseInfo);\n\n  // create/append gif\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.alt = exercise.name;\n  const gifImage = await fetchGif(exercise.gifName);\n  gif.src = gifImage;\n  loadingIndicator.remove();\n  gifContainer.appendChild(gif);\n  exercise.gifUrl = gifImage;\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  exercise.steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = `  ${step}`;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n  const exerciseTitle = document.createElement('div');\n  exerciseTitle.classList.add('exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  exerciseTitleContainer.append(exerciseTitle);\n  instructionsContainer.appendChild(exerciseSteps);\n  carouselInstance.addExerciseToCarousel(exercise);\n};\nconst displayRecommendedRepRange = workoutType => {\n  let repRangeContainer = document.querySelector('.rep-range');\n  if (!repRangeContainer) {\n    repRangeContainer = document.createElement('div');\n    repRangeContainer.classList.add('rep-range');\n    const exerciseInfo = document.querySelector('.exercise-info');\n    exerciseInfo.appendChild(repRangeContainer);\n  } else {\n    repRangeContainer.innerText = '';\n  }\n  let repRange;\n  if (workoutType === 'strength') {\n    repRange = '4-6 reps';\n  } else if (workoutType === 'size') {\n    repRange = '8-12 reps';\n  } else if (workoutType === 'endurance') {\n    repRange = '15-20 reps';\n  }\n  repRangeContainer.innerText = repRange;\n};\nconst toggleActiveButton = clickedButton => {\n  const buttons = Array.from(document.querySelectorAll('.goal-button'));\n  buttons.forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n};\nconst removeExerciseFromInfoContainer = nextExercise => {\n  if (nextExercise) displayExerciseInfo(nextExercise);else {\n    const exerciseTitle = document.querySelector('.exercise-title');\n    exerciseTitle.innerText = \"\";\n    exerciseTitle.style.display = 'none';\n    const instructionsContainer = document.querySelector('.instructions-container');\n    while (instructionsContainer.firstChild) {\n      instructionsContainer.removeChild(instructionsContainer.firstChild);\n    }\n    ;\n    const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n    while (exerciseInfoContainer.firstChild) {\n      exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n    }\n    ;\n    const gifContainer = document.querySelector('.gif-container');\n    if (gifContainer.firstChild) {\n      gifContainer.removeChild(gifContainer.firstChild);\n    }\n    ;\n  }\n};\nconst displayExerciseInfo = exercise => {\n  const exerciseTitle = document.querySelector('.exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  const instructionsContainer = document.querySelector('.instructions-container');\n  instructionsContainer.removeChild(instructionsContainer.children[0]);\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  exercise.steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = step;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n  instructionsContainer.appendChild(exerciseSteps);\n  const primaryMuscles = document.querySelector('.primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMuscles = document.querySelector('.secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\" \")}`;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n  const goalButtons = document.querySelectorAll('.goal-button');\n  goalButtons.forEach(button => button.classList.remove('active'));\n  const button = document.querySelector(`.goal-button[data-goal=\"${exercise.goal}\"]`);\n  debugger;\n  if (button) {\n    button.classList.add('active');\n    displayRecommendedRepRange(exercise.goal);\n  } else {\n    const repRangeElement = document.querySelector('.rep-range');\n    if (repRangeElement) {\n      repRangeElement.innerText = '';\n    }\n  }\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.src = exercise.gifUrl;\n  gif.alt = exercise.name;\n  gifContainer.appendChild(gif);\n};\n\n// const fetchSteps = async (exerciseName) => {\n//     const encodedName = encodeURIComponent(exerciseName);\n//     const url = `https://musclewiki.p.rapidapi.com/exercises?name=${encodedName}`;\n//     const options = {\n//         method: 'GET',\n//         headers: {\n//             'X-RapidAPI-Key': '3af8ef8f2dmshc6efeb993784441p1a7439jsn93b2667827e7',\n//             'X-RapidAPI-Host': 'musclewiki.p.rapidapi.com'\n//         }\n//     };\n//     try {\n//         const response = await fetch(url, options);\n//         const result = await response.json();\n//         const exercise = result[0];\n//         return exercise.steps;\n//     } catch (error) {\n//         console.error(error);\n//         return null;\n//     }\n// };\n\nconst fetchGif = async exerciseName => {\n  const encodedName = encodeURIComponent(exerciseName);\n  const url = `https://exercisedb.p.rapidapi.com/exercises/name/${encodedName}`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '91cf2fc490mshc6c99117d33a2a2p1011c0jsnf2d0274cc698',\n      'X-RapidAPI-Host': 'exercisedb.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    const gifUrl = result[0].gifUrl;\n    return gifUrl;\n  } catch (error) {\n    console.error(error);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU8sQ0FBQztJQUMxQyxNQUFNSyxNQUFNLEdBQUcsTUFBTUYsUUFBUSxDQUFDRyxJQUFJLENBQUMsQ0FBQztJQUNwQyxNQUFNbkMsTUFBTSxHQUFHa0MsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDbEMsTUFBTTtJQUMvQixPQUFPQSxNQUFNO0VBQ2pCLENBQUMsQ0FBQyxPQUFPb0MsS0FBSyxFQUFFO0lBQ1pDLE9BQU8sQ0FBQ0QsS0FBSyxDQUFDQSxLQUFLLENBQUM7RUFDeEI7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlmaXRuZXNzYnVkZHkvLi9zcmMvc2NyaXB0cy9leGVyY2lzZXMuanM/M2M4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzaG91bGRlckV4ZXJjaXNlcywgY2hlc3RFeGVyY2lzZXMsIGJpY2VwRXhlcmNpc2VzLCB0cmljZXBFeGVyY2lzZXMsIGZvcmVhcm1FeGVyY2lzZXMsIGNvcmVFeGVyY2lzZXMsIGJhY2tFeGVyY2lzZXMsIGdsdXRlRXhlcmNpc2VzLCBxdWFkRXhlcmNpc2VzLCBoYW1zdHJpbmdFeGVyY2lzZXMsIGNhbGZFeGVyY2lzZXMgfSBmcm9tICcuL2RhdGEuanMnO1xuXG5jb25zdCBleGVyY2lzZXMgPSB7XG4gICAgJ2NoZXN0JzogY2hlc3RFeGVyY2lzZXMsXG4gICAgJ2xlZnQtc2hvdWxkZXInOiBzaG91bGRlckV4ZXJjaXNlcyxcbiAgICAncmlnaHQtc2hvdWxkZXInOiBzaG91bGRlckV4ZXJjaXNlcyxcbiAgICAnbGVmdC1iaWNlcCc6IGJpY2VwRXhlcmNpc2VzLFxuICAgICdyaWdodC1iaWNlcCc6IGJpY2VwRXhlcmNpc2VzLFxuICAgICdsZWZ0LXRyaWNlcCc6IHRyaWNlcEV4ZXJjaXNlcyxcbiAgICAncmlnaHQtdHJpY2VwJzogdHJpY2VwRXhlcmNpc2VzLFxuICAgICdsZWZ0LWZvcmVhcm0nOiBmb3JlYXJtRXhlcmNpc2VzLFxuICAgICdyaWdodC1mb3JlYXJtJzogZm9yZWFybUV4ZXJjaXNlcyxcbiAgICAnYWJzJzogY29yZUV4ZXJjaXNlcyxcbiAgICAnYmFjay0yJzogYmFja0V4ZXJjaXNlcyxcbiAgICAnbGVmdC1nbHV0ZS0yJzogZ2x1dGVFeGVyY2lzZXMsXG4gICAgJ3JpZ2h0LWdsdXRlLTInOiBnbHV0ZUV4ZXJjaXNlcyxcbiAgICAnbGVmdC1xdWFkJzogcXVhZEV4ZXJjaXNlcyxcbiAgICAncmlnaHQtcXVhZCc6IHF1YWRFeGVyY2lzZXMsXG4gICAgJ2xlZnQtaGFtc3RyaW5nJzogaGFtc3RyaW5nRXhlcmNpc2VzLFxuICAgICdyaWdodC1oYW1zdHJpbmcnOiBoYW1zdHJpbmdFeGVyY2lzZXMsXG4gICAgJ2xlZnQtY2FsZic6IGNhbGZFeGVyY2lzZXMsXG4gICAgJ3JpZ2h0LWNhbGYnOiBjYWxmRXhlcmNpc2VzXG59O1xuXG5jb25zdCBnZW5lcmF0ZUV4ZXJjaXNlID0gYXN5bmMgKG11c2NsZUJsb2NrLCBjYXJvdXNlbEluc3RhbmNlKSA9PiB7XG5cbiAgICBjb25zdCBleGVyY2lzZXNCeU11c2NsZUJsb2NrID0gZXhlcmNpc2VzW211c2NsZUJsb2NrLmNsYXNzTGlzdFswXV07XG4gICAgZGVidWdnZXJcbiAgICAvLyBrZWVwIGFzc2lnbmluZyBhbiBleGVyY2lzZSB1bnRpbCBpdCdzIE5PVCBpbiBzdG9yZWRFeGVyY2lzZXNcbiAgICBsZXQgZXhlcmNpc2U7XG4gICAgZG8ge1xuICAgICAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGV4ZXJjaXNlc0J5TXVzY2xlQmxvY2subGVuZ3RoKTtcbiAgICAgICAgZXhlcmNpc2UgPSBleGVyY2lzZXNCeU11c2NsZUJsb2NrW3JhbmRvbUluZGV4XTtcbiAgICB9IHdoaWxlIChjYXJvdXNlbEluc3RhbmNlLnN0b3JlZEV4ZXJjaXNlcy5pbmNsdWRlcyhleGVyY2lzZSkpO1xuXG5cbiAgICAvLyBjaGVjayBpZiBhbnl0aGluZyBleGlzdHMgb24gdGhlIFIgc2lkZVxuICAgIGNvbnN0IGluc3RydWN0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnN0cnVjdGlvbnMtY29udGFpbmVyJyk7XG4gICAgd2hpbGUgKGluc3RydWN0aW9uc0NvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIGluc3RydWN0aW9uc0NvbnRhaW5lci5yZW1vdmVDaGlsZChpbnN0cnVjdGlvbnNDb250YWluZXIuZmlyc3RDaGlsZClcbiAgICB9O1xuXG4gICAgY29uc3QgZXhlcmNpc2VJbmZvQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmV4ZXJjaXNlLWluZm8tY29udGFpbmVyJyk7XG4gICAgd2hpbGUgKGV4ZXJjaXNlSW5mb0NvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIGV4ZXJjaXNlSW5mb0NvbnRhaW5lci5yZW1vdmVDaGlsZChleGVyY2lzZUluZm9Db250YWluZXIuZmlyc3RDaGlsZCk7XG4gICAgfTtcblxuICAgIGNvbnN0IGdpZkNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5naWYtY29udGFpbmVyJyk7XG4gICAgaWYgKGdpZkNvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIGdpZkNvbnRhaW5lci5yZW1vdmVDaGlsZChnaWZDb250YWluZXIuZmlyc3RDaGlsZCk7XG4gICAgfTtcblxuICAgIGNvbnN0IGxvYWRpbmdJbmRpY2F0b3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsb2FkaW5nSW5kaWNhdG9yLmNsYXNzTGlzdC5hZGQoJ2xvYWRpbmcnKTtcbiAgICBsb2FkaW5nSW5kaWNhdG9yLmlubmVyVGV4dCA9IFwiRmV0Y2hpbmcgR0lGLi4uXCI7XG4gICAgZ2lmQ29udGFpbmVyLmFwcGVuZENoaWxkKGxvYWRpbmdJbmRpY2F0b3IpO1xuICAgIGRlYnVnZ2VyXG4gICAgY29uc3QgZXhlcmNpc2VUaXRsZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leGVyY2lzZS10aXRsZS1jb250YWluZXInKTtcbiAgICBpZiAoZXhlcmNpc2VUaXRsZUNvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIGV4ZXJjaXNlVGl0bGVDb250YWluZXIucmVtb3ZlQ2hpbGQoZXhlcmNpc2VUaXRsZUNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUvYXBwZW5kIGV4ZXJjaXNlSW5mb1xuICAgIGNvbnN0IHByaW1hcnlNdXNjbGVzVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBwcmltYXJ5TXVzY2xlc1RpdGxlLmNsYXNzTGlzdC5hZGQoJ3ByaW1hcnktbXVzY2xlcy10aXRsZScpO1xuICAgIHByaW1hcnlNdXNjbGVzVGl0bGUuaW5uZXJUZXh0ID0gJ1ByaW1hcnkgTXVzY2xlcyc7XG5cbiAgICBjb25zdCBwcmltYXJ5TXVzY2xlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHByaW1hcnlNdXNjbGVzLmNsYXNzTGlzdC5hZGQoJ3ByaW1hcnktbXVzY2xlcycpO1xuICAgIHByaW1hcnlNdXNjbGVzLmlubmVyVGV4dCA9IGAke2V4ZXJjaXNlLnByaW1hcnlNdXNjbGVzLmpvaW4oXCIgXCIpfWA7XG5cbiAgICBjb25zdCBzZWNvbmRhcnlNdXNjbGVzVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzZWNvbmRhcnlNdXNjbGVzVGl0bGUuY2xhc3NMaXN0LmFkZCgnc2Vjb25kYXJ5LW11c2NsZXMtdGl0bGUnKTtcbiAgICBzZWNvbmRhcnlNdXNjbGVzVGl0bGUuaW5uZXJUZXh0ID0gJ1NlY29uZGFyeSBNdXNjbGVzJztcblxuICAgIGNvbnN0IHNlY29uZGFyeU11c2NsZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBzZWNvbmRhcnlNdXNjbGVzLmNsYXNzTGlzdC5hZGQoJ3NlY29uZGFyeS1tdXNjbGVzJyk7XG4gICAgc2Vjb25kYXJ5TXVzY2xlcy5pbm5lclRleHQgPSBgJHtleGVyY2lzZS5zZWNvbmRhcnlNdXNjbGVzLmpvaW4oXCIsIFwiKX1gO1xuXG4gICAgY29uc3Qgc3RyZW5ndGhCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICBzdHJlbmd0aEJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdnb2FsLWJ1dHRvbicpXG4gICAgc3RyZW5ndGhCdXR0b24uaW5uZXJUZXh0ID0gJ1N0cmVuZ3RoJztcbiAgICBzdHJlbmd0aEJ1dHRvbi5kYXRhc2V0LmdvYWwgPSAnc3RyZW5ndGgnO1xuXG4gICAgY29uc3Qgc2l6ZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIHNpemVCdXR0b24uY2xhc3NMaXN0LmFkZCgnZ29hbC1idXR0b24nKVxuICAgIHNpemVCdXR0b24uaW5uZXJUZXh0ID0gJ1NpemUnO1xuICAgIHNpemVCdXR0b24uZGF0YXNldC5nb2FsID0gJ3NpemUnO1xuXG4gICAgY29uc3QgZW5kdXJhbmNlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XG4gICAgZW5kdXJhbmNlQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2dvYWwtYnV0dG9uJylcbiAgICBlbmR1cmFuY2VCdXR0b24uaW5uZXJUZXh0ID0gJ0VuZHVyYW5jZSc7XG4gICAgZW5kdXJhbmNlQnV0dG9uLmRhdGFzZXQuZ29hbCA9ICdlbmR1cmFuY2UnO1xuXG4gICAgc3RyZW5ndGhCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgIHRvZ2dsZUFjdGl2ZUJ1dHRvbihzdHJlbmd0aEJ1dHRvbik7XG4gICAgICAgIGRpc3BsYXlSZWNvbW1lbmRlZFJlcFJhbmdlKCdzdHJlbmd0aCcpO1xuICAgICAgICBleGVyY2lzZS5nb2FsID0gJ3N0cmVuZ3RoJztcbiAgICAgICAgY2Fyb3VzZWxJbnN0YW5jZS51cGRhdGVTdG9yZWRFeGVyY2lzZShleGVyY2lzZSk7XG4gICAgfSk7XG5cbiAgICBzaXplQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICB0b2dnbGVBY3RpdmVCdXR0b24oc2l6ZUJ1dHRvbik7XG4gICAgICAgIGRpc3BsYXlSZWNvbW1lbmRlZFJlcFJhbmdlKCdzaXplJyk7XG4gICAgICAgIGV4ZXJjaXNlLmdvYWwgPSAnc2l6ZSc7XG4gICAgICAgIGNhcm91c2VsSW5zdGFuY2UudXBkYXRlU3RvcmVkRXhlcmNpc2UoZXhlcmNpc2UpO1xuICAgIH0pO1xuXG4gICAgZW5kdXJhbmNlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBkZWJ1Z2dlclxuICAgICAgICB0b2dnbGVBY3RpdmVCdXR0b24oZW5kdXJhbmNlQnV0dG9uKTtcbiAgICAgICAgZGlzcGxheVJlY29tbWVuZGVkUmVwUmFuZ2UoJ2VuZHVyYW5jZScpO1xuICAgICAgICBleGVyY2lzZS5nb2FsID0gJ2VuZHVyYW5jZSc7XG4gICAgICAgIGNhcm91c2VsSW5zdGFuY2UudXBkYXRlU3RvcmVkRXhlcmNpc2UoZXhlcmNpc2UpO1xuICAgIH0pO1xuXG4gICAgY29uc3QgYnV0dG9uc0NvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGJ1dHRvbnNDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZ29hbC1idXR0b25zLWNvbnRhaW5lcicpO1xuICAgIGJ1dHRvbnNDb250YWluZXIuYXBwZW5kKHN0cmVuZ3RoQnV0dG9uLCBzaXplQnV0dG9uLCBlbmR1cmFuY2VCdXR0b24pO1xuXG4gICAgY29uc3QgZXhlcmNpc2VJbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZXhlcmNpc2VJbmZvLmNsYXNzTGlzdC5hZGQoJ2V4ZXJjaXNlLWluZm8nKTtcbiAgICBleGVyY2lzZUluZm8uYXBwZW5kKHByaW1hcnlNdXNjbGVzVGl0bGUsIHByaW1hcnlNdXNjbGVzLCBzZWNvbmRhcnlNdXNjbGVzVGl0bGUsIHNlY29uZGFyeU11c2NsZXMsIGJ1dHRvbnNDb250YWluZXIpO1xuICAgIGV4ZXJjaXNlSW5mb0NvbnRhaW5lci5hcHBlbmRDaGlsZChleGVyY2lzZUluZm8pO1xuXG4gICAgLy8gY3JlYXRlL2FwcGVuZCBnaWZcbiAgICBjb25zdCBnaWYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBnaWYuY2xhc3NMaXN0LmFkZCgnZ2lmJyk7XG4gICAgZ2lmLmFsdCA9IGV4ZXJjaXNlLm5hbWU7XG5cbiAgICBjb25zdCBnaWZJbWFnZSA9IGF3YWl0IGZldGNoR2lmKGV4ZXJjaXNlLmdpZk5hbWUpO1xuICAgIGdpZi5zcmMgPSBnaWZJbWFnZTtcbiAgICBsb2FkaW5nSW5kaWNhdG9yLnJlbW92ZSgpO1xuICAgIGdpZkNvbnRhaW5lci5hcHBlbmRDaGlsZChnaWYpO1xuXG4gICAgZXhlcmNpc2UuZ2lmVXJsID0gZ2lmSW1hZ2U7XG5cbiAgICBjb25zdCBleGVyY2lzZVN0ZXBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICBleGVyY2lzZVN0ZXBzLmNsYXNzTGlzdC5hZGQoJ2V4ZXJjaXNlLXN0ZXBzJyk7XG4gICAgZXhlcmNpc2Uuc3RlcHMuZm9yRWFjaCgoc3RlcCkgPT4ge1xuICAgICAgICBjb25zdCBleGVyY2lzZVN0ZXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICBleGVyY2lzZVN0ZXAuY2xhc3NMaXN0LmFkZCgnZXhlcmNpc2Utc3RlcCcpO1xuICAgICAgICBleGVyY2lzZVN0ZXAuaW5uZXJUZXh0ID0gYCAgJHtzdGVwfWA7XG4gICAgICAgIGV4ZXJjaXNlU3RlcHMuYXBwZW5kQ2hpbGQoZXhlcmNpc2VTdGVwKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGV4ZXJjaXNlVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBleGVyY2lzZVRpdGxlLmNsYXNzTGlzdC5hZGQoJ2V4ZXJjaXNlLXRpdGxlJyk7XG4gICAgZXhlcmNpc2VUaXRsZS5pbm5lclRleHQgPSBleGVyY2lzZS5uYW1lO1xuICAgIGV4ZXJjaXNlVGl0bGVDb250YWluZXIuYXBwZW5kKGV4ZXJjaXNlVGl0bGUpO1xuXG4gICAgaW5zdHJ1Y3Rpb25zQ29udGFpbmVyLmFwcGVuZENoaWxkKGV4ZXJjaXNlU3RlcHMpO1xuXG4gICAgY2Fyb3VzZWxJbnN0YW5jZS5hZGRFeGVyY2lzZVRvQ2Fyb3VzZWwoZXhlcmNpc2UpO1xufVxuXG5jb25zdCBkaXNwbGF5UmVjb21tZW5kZWRSZXBSYW5nZSA9ICh3b3Jrb3V0VHlwZSkgPT4ge1xuICAgIGxldCByZXBSYW5nZUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZXAtcmFuZ2UnKTtcblxuICAgIGlmICghcmVwUmFuZ2VDb250YWluZXIpIHtcbiAgICAgICAgcmVwUmFuZ2VDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcmVwUmFuZ2VDb250YWluZXIuY2xhc3NMaXN0LmFkZCgncmVwLXJhbmdlJyk7XG5cbiAgICAgICAgY29uc3QgZXhlcmNpc2VJbmZvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmV4ZXJjaXNlLWluZm8nKTtcbiAgICAgICAgZXhlcmNpc2VJbmZvLmFwcGVuZENoaWxkKHJlcFJhbmdlQ29udGFpbmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXBSYW5nZUNvbnRhaW5lci5pbm5lclRleHQgPSAnJztcbiAgICB9XG5cbiAgICBsZXQgcmVwUmFuZ2U7XG4gICAgaWYgKHdvcmtvdXRUeXBlID09PSAnc3RyZW5ndGgnKSB7XG4gICAgICAgIHJlcFJhbmdlID0gJzQtNiByZXBzJztcbiAgICB9IGVsc2UgaWYgKHdvcmtvdXRUeXBlID09PSAnc2l6ZScpIHtcbiAgICAgICAgcmVwUmFuZ2UgPSAnOC0xMiByZXBzJztcbiAgICB9IGVsc2UgaWYgKHdvcmtvdXRUeXBlID09PSAnZW5kdXJhbmNlJykge1xuICAgICAgICByZXBSYW5nZSA9ICcxNS0yMCByZXBzJztcbiAgICB9XG5cbiAgICByZXBSYW5nZUNvbnRhaW5lci5pbm5lclRleHQgPSByZXBSYW5nZTtcbn07XG5cbmNvbnN0IHRvZ2dsZUFjdGl2ZUJ1dHRvbiA9IChjbGlja2VkQnV0dG9uKSA9PiB7XG4gICAgY29uc3QgYnV0dG9ucyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmdvYWwtYnV0dG9uJykpO1xuICAgIGJ1dHRvbnMuZm9yRWFjaCgoYnV0dG9uKSA9PiB7XG4gICAgICAgIGlmIChidXR0b24gPT09IGNsaWNrZWRCdXR0b24pIHtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5jb25zdCByZW1vdmVFeGVyY2lzZUZyb21JbmZvQ29udGFpbmVyID0gKG5leHRFeGVyY2lzZSkgPT4ge1xuICAgIGlmIChuZXh0RXhlcmNpc2UpIGRpc3BsYXlFeGVyY2lzZUluZm8obmV4dEV4ZXJjaXNlKTtcbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgZXhlcmNpc2VUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5leGVyY2lzZS10aXRsZScpO1xuICAgICAgICBleGVyY2lzZVRpdGxlLmlubmVyVGV4dCA9IFwiXCI7XG4gICAgICAgIGV4ZXJjaXNlVGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgICAgICBjb25zdCBpbnN0cnVjdGlvbnNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5zdHJ1Y3Rpb25zLWNvbnRhaW5lcicpO1xuICAgICAgICB3aGlsZSAoaW5zdHJ1Y3Rpb25zQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGluc3RydWN0aW9uc0NvbnRhaW5lci5yZW1vdmVDaGlsZChpbnN0cnVjdGlvbnNDb250YWluZXIuZmlyc3RDaGlsZClcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBleGVyY2lzZUluZm9Db250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZXhlcmNpc2UtaW5mby1jb250YWluZXInKTtcbiAgICAgICAgd2hpbGUgKGV4ZXJjaXNlSW5mb0NvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICBleGVyY2lzZUluZm9Db250YWluZXIucmVtb3ZlQ2hpbGQoZXhlcmNpc2VJbmZvQ29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGdpZkNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5naWYtY29udGFpbmVyJyk7XG4gICAgICAgIGlmIChnaWZDb250YWluZXIuZmlyc3RDaGlsZCkge1xuICAgICAgICAgICAgZ2lmQ29udGFpbmVyLnJlbW92ZUNoaWxkKGdpZkNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgICAgfTtcbiAgICB9XG59O1xuXG5jb25zdCBkaXNwbGF5RXhlcmNpc2VJbmZvID0gKGV4ZXJjaXNlKSA9PiB7XG5cbiAgICBjb25zdCBleGVyY2lzZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmV4ZXJjaXNlLXRpdGxlJyk7XG4gICAgZXhlcmNpc2VUaXRsZS5pbm5lclRleHQgPSBleGVyY2lzZS5uYW1lO1xuXG4gICAgY29uc3QgaW5zdHJ1Y3Rpb25zQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmluc3RydWN0aW9ucy1jb250YWluZXInKTtcbiAgICBpbnN0cnVjdGlvbnNDb250YWluZXIucmVtb3ZlQ2hpbGQoaW5zdHJ1Y3Rpb25zQ29udGFpbmVyLmNoaWxkcmVuWzBdKTtcbiAgICBjb25zdCBleGVyY2lzZVN0ZXBzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICBleGVyY2lzZVN0ZXBzLmNsYXNzTGlzdC5hZGQoJ2V4ZXJjaXNlLXN0ZXBzJyk7XG4gICAgZXhlcmNpc2Uuc3RlcHMuZm9yRWFjaCgoc3RlcCkgPT4ge1xuICAgICAgICBjb25zdCBleGVyY2lzZVN0ZXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgICAgICBleGVyY2lzZVN0ZXAuY2xhc3NMaXN0LmFkZCgnZXhlcmNpc2Utc3RlcCcpO1xuICAgICAgICBleGVyY2lzZVN0ZXAuaW5uZXJUZXh0ID0gc3RlcDtcbiAgICAgICAgZXhlcmNpc2VTdGVwcy5hcHBlbmRDaGlsZChleGVyY2lzZVN0ZXApO1xuICAgIH0pO1xuXG4gICAgaW5zdHJ1Y3Rpb25zQ29udGFpbmVyLmFwcGVuZENoaWxkKGV4ZXJjaXNlU3RlcHMpO1xuXG4gICAgY29uc3QgcHJpbWFyeU11c2NsZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpbWFyeS1tdXNjbGVzJyk7XG4gICAgcHJpbWFyeU11c2NsZXMuaW5uZXJUZXh0ID0gYCR7ZXhlcmNpc2UucHJpbWFyeU11c2NsZXMuam9pbihcIiBcIil9YDtcbiAgICBjb25zdCBzZWNvbmRhcnlNdXNjbGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlY29uZGFyeS1tdXNjbGVzJyk7XG4gICAgc2Vjb25kYXJ5TXVzY2xlcy5pbm5lclRleHQgPSBgJHtleGVyY2lzZS5zZWNvbmRhcnlNdXNjbGVzLmpvaW4oXCIgXCIpfWA7XG5cbiAgICBjb25zdCBnaWZDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2lmLWNvbnRhaW5lcicpO1xuICAgIGlmIChnaWZDb250YWluZXIuZmlyc3RDaGlsZCkge1xuICAgICAgICBnaWZDb250YWluZXIucmVtb3ZlQ2hpbGQoZ2lmQ29udGFpbmVyLmZpcnN0Q2hpbGQpO1xuICAgIH07XG5cbiAgICBjb25zdCBnb2FsQnV0dG9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5nb2FsLWJ1dHRvbicpO1xuICAgIGdvYWxCdXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKSk7XG4gICAgY29uc3QgYnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLmdvYWwtYnV0dG9uW2RhdGEtZ29hbD1cIiR7ZXhlcmNpc2UuZ29hbH1cIl1gKTtcbiAgICBkZWJ1Z2dlclxuICAgIGlmIChidXR0b24pIHtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuICAgICAgICBkaXNwbGF5UmVjb21tZW5kZWRSZXBSYW5nZShleGVyY2lzZS5nb2FsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCByZXBSYW5nZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVwLXJhbmdlJyk7XG4gICAgICAgIGlmIChyZXBSYW5nZUVsZW1lbnQpIHtcbiAgICAgICAgICAgIHJlcFJhbmdlRWxlbWVudC5pbm5lclRleHQgPSAnJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdpZiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGdpZi5jbGFzc0xpc3QuYWRkKCdnaWYnKTtcbiAgICBnaWYuc3JjID0gZXhlcmNpc2UuZ2lmVXJsO1xuICAgIGdpZi5hbHQgPSBleGVyY2lzZS5uYW1lO1xuICAgIGdpZkNvbnRhaW5lci5hcHBlbmRDaGlsZChnaWYpO1xufVxuXG4vLyBjb25zdCBmZXRjaFN0ZXBzID0gYXN5bmMgKGV4ZXJjaXNlTmFtZSkgPT4ge1xuLy8gICAgIGNvbnN0IGVuY29kZWROYW1lID0gZW5jb2RlVVJJQ29tcG9uZW50KGV4ZXJjaXNlTmFtZSk7XG4vLyAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vbXVzY2xld2lraS5wLnJhcGlkYXBpLmNvbS9leGVyY2lzZXM/bmFtZT0ke2VuY29kZWROYW1lfWA7XG4vLyAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbi8vICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbi8vICAgICAgICAgaGVhZGVyczoge1xuLy8gICAgICAgICAgICAgJ1gtUmFwaWRBUEktS2V5JzogJzNhZjhlZjhmMmRtc2hjNmVmZWI5OTM3ODQ0NDFwMWE3NDM5anNuOTNiMjY2NzgyN2U3Jyxcbi8vICAgICAgICAgICAgICdYLVJhcGlkQVBJLUhvc3QnOiAnbXVzY2xld2lraS5wLnJhcGlkYXBpLmNvbSdcbi8vICAgICAgICAgfVxuLy8gICAgIH07XG4vLyAgICAgdHJ5IHtcbi8vICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuLy8gICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4vLyAgICAgICAgIGNvbnN0IGV4ZXJjaXNlID0gcmVzdWx0WzBdO1xuLy8gICAgICAgICByZXR1cm4gZXhlcmNpc2Uuc3RlcHM7XG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4vLyAgICAgICAgIHJldHVybiBudWxsO1xuLy8gICAgIH1cbi8vIH07XG5cblxuY29uc3QgZmV0Y2hHaWYgPSBhc3luYyAoZXhlcmNpc2VOYW1lKSA9PiB7XG4gICAgY29uc3QgZW5jb2RlZE5hbWUgPSBlbmNvZGVVUklDb21wb25lbnQoZXhlcmNpc2VOYW1lKTtcbiAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9leGVyY2lzZWRiLnAucmFwaWRhcGkuY29tL2V4ZXJjaXNlcy9uYW1lLyR7ZW5jb2RlZE5hbWV9YDtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnWC1SYXBpZEFQSS1LZXknOiAnOTFjZjJmYzQ5MG1zaGM2Yzk5MTE3ZDMzYTJhMnAxMDExYzBqc25mMmQwMjc0Y2M2OTgnLFxuICAgICAgICAgICAgJ1gtUmFwaWRBUEktSG9zdCc6ICdleGVyY2lzZWRiLnAucmFwaWRhcGkuY29tJ1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCBvcHRpb25zKTtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICBjb25zdCBnaWZVcmwgPSByZXN1bHRbMF0uZ2lmVXJsO1xuICAgICAgICByZXR1cm4gZ2lmVXJsO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIH1cbn1cblxuXG5leHBvcnQgeyBnZW5lcmF0ZUV4ZXJjaXNlLCByZW1vdmVFeGVyY2lzZUZyb21JbmZvQ29udGFpbmVyLCBkaXNwbGF5RXhlcmNpc2VJbmZvIH07XG4iXSwibmFtZXMiOlsic2hvdWxkZXJFeGVyY2lzZXMiLCJjaGVzdEV4ZXJjaXNlcyIsImJpY2VwRXhlcmNpc2VzIiwidHJpY2VwRXhlcmNpc2VzIiwiZm9yZWFybUV4ZXJjaXNlcyIsImNvcmVFeGVyY2lzZXMiLCJiYWNrRXhlcmNpc2VzIiwiZ2x1dGVFeGVyY2lzZXMiLCJxdWFkRXhlcmNpc2VzIiwiaGFtc3RyaW5nRXhlcmNpc2VzIiwiY2FsZkV4ZXJjaXNlcyIsImV4ZXJjaXNlcyIsImdlbmVyYXRlRXhlcmNpc2UiLCJtdXNjbGVCbG9jayIsImNhcm91c2VsSW5zdGFuY2UiLCJleGVyY2lzZXNCeU11c2NsZUJsb2NrIiwiY2xhc3NMaXN0IiwiZXhlcmNpc2UiLCJyYW5kb21JbmRleCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsInN0b3JlZEV4ZXJjaXNlcyIsImluY2x1ZGVzIiwiaW5zdHJ1Y3Rpb25zQ29udGFpbmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiZXhlcmNpc2VJbmZvQ29udGFpbmVyIiwiZ2lmQ29udGFpbmVyIiwibG9hZGluZ0luZGljYXRvciIsImNyZWF0ZUVsZW1lbnQiLCJhZGQiLCJpbm5lclRleHQiLCJhcHBlbmRDaGlsZCIsImV4ZXJjaXNlVGl0bGVDb250YWluZXIiLCJwcmltYXJ5TXVzY2xlc1RpdGxlIiwicHJpbWFyeU11c2NsZXMiLCJqb2luIiwic2Vjb25kYXJ5TXVzY2xlc1RpdGxlIiwic2Vjb25kYXJ5TXVzY2xlcyIsInN0cmVuZ3RoQnV0dG9uIiwiZGF0YXNldCIsImdvYWwiLCJzaXplQnV0dG9uIiwiZW5kdXJhbmNlQnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZ2dsZUFjdGl2ZUJ1dHRvbiIsImRpc3BsYXlSZWNvbW1lbmRlZFJlcFJhbmdlIiwidXBkYXRlU3RvcmVkRXhlcmNpc2UiLCJidXR0b25zQ29udGFpbmVyIiwiYXBwZW5kIiwiZXhlcmNpc2VJbmZvIiwiZ2lmIiwiYWx0IiwibmFtZSIsImdpZkltYWdlIiwiZmV0Y2hHaWYiLCJnaWZOYW1lIiwic3JjIiwicmVtb3ZlIiwiZ2lmVXJsIiwiZXhlcmNpc2VTdGVwcyIsInN0ZXBzIiwiZm9yRWFjaCIsInN0ZXAiLCJleGVyY2lzZVN0ZXAiLCJleGVyY2lzZVRpdGxlIiwiYWRkRXhlcmNpc2VUb0Nhcm91c2VsIiwid29ya291dFR5cGUiLCJyZXBSYW5nZUNvbnRhaW5lciIsInJlcFJhbmdlIiwiY2xpY2tlZEJ1dHRvbiIsImJ1dHRvbnMiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uIiwicmVtb3ZlRXhlcmNpc2VGcm9tSW5mb0NvbnRhaW5lciIsIm5leHRFeGVyY2lzZSIsImRpc3BsYXlFeGVyY2lzZUluZm8iLCJzdHlsZSIsImRpc3BsYXkiLCJjaGlsZHJlbiIsImdvYWxCdXR0b25zIiwicmVwUmFuZ2VFbGVtZW50IiwiZXhlcmNpc2VOYW1lIiwiZW5jb2RlZE5hbWUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ1cmwiLCJvcHRpb25zIiwibWV0aG9kIiwiaGVhZGVycyIsInJlc3BvbnNlIiwiZmV0Y2giLCJyZXN1bHQiLCJqc29uIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/exercises.js\n");

/***/ }),

/***/ "./src/scripts/muscleMap.js":
/*!**********************************!*\
  !*** ./src/scripts/muscleMap.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises.js */ \"./src/scripts/exercises.js\");\n\nclass MuscleMap {\n  constructor(containerEl, myCarousel) {\n    this.container = containerEl;\n    this.myCarousel = myCarousel;\n    this.render();\n    this.renderBack();\n    this.renderToggleButton();\n    this.handleClickGenerateExercise = this.handleClickGenerateExercise.bind(this);\n    this.bindEvents();\n    this.onCooldown = false;\n    this.firstClickDone = false;\n  }\n  render() {\n    const muscleMap = document.createElement('div');\n    muscleMap.classList.add('muscle-map');\n    const cap = document.createElement('img');\n    cap.classList.add('backward-cap');\n    cap.src = 'assets/images/backward-cap-transparent.jpeg';\n    const eyes = document.createElement('div');\n    eyes.classList.add('eyes');\n    eyes.innerText = '';\n    const mouth = document.createElement('img');\n    mouth.src = 'assets/images/mouth-transparent.png';\n    mouth.classList.add('mouth');\n    const head = document.createElement('div');\n    head.classList.add('head');\n    const chest = document.createElement('div');\n    chest.classList.add('chest');\n    const leftChest = document.createElement('div');\n    leftChest.classList.add('left-chest');\n    chest.appendChild(leftChest);\n    const rightChest = document.createElement('div');\n    rightChest.classList.add('right-chest');\n    chest.appendChild(rightChest);\n    const back = document.createElement('div');\n    back.classList.add('back');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftBicep = document.createElement('div');\n    leftBicep.classList.add('left-bicep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightBicep = document.createElement('div');\n    rightBicep.classList.add('right-bicep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const absContainer = document.createElement('div');\n    absContainer.classList.add('abs');\n    for (let i = 0; i < 6; i++) {\n      const abs = document.createElement('div');\n      absContainer.appendChild(abs);\n    }\n    ;\n    const leftGlute = document.createElement('div');\n    leftGlute.classList.add('left-glute');\n    const leftQuad = document.createElement('div');\n    leftQuad.classList.add('left-quad');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightGlute = document.createElement('div');\n    rightGlute.classList.add('right-glute');\n    const rightQuad = document.createElement('div');\n    rightQuad.classList.add('right-quad');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMap.appendChild(cap);\n    muscleMap.appendChild(head);\n    muscleMap.appendChild(eyes);\n    muscleMap.appendChild(mouth);\n    muscleMap.appendChild(chest);\n    muscleMap.appendChild(back);\n    muscleMap.appendChild(leftShoulder);\n    muscleMap.appendChild(leftBicep);\n    muscleMap.appendChild(leftForearm);\n    muscleMap.appendChild(leftHand);\n    muscleMap.appendChild(rightShoulder);\n    muscleMap.appendChild(rightForearm);\n    muscleMap.appendChild(rightBicep);\n    muscleMap.appendChild(rightHand);\n    muscleMap.appendChild(absContainer);\n    muscleMap.appendChild(leftGlute);\n    muscleMap.appendChild(leftQuad);\n    muscleMap.appendChild(leftCalf);\n    muscleMap.appendChild(leftFoot);\n    muscleMap.appendChild(rightGlute);\n    muscleMap.appendChild(rightQuad);\n    muscleMap.appendChild(rightCalf);\n    muscleMap.appendChild(rightFoot);\n    this.container.appendChild(muscleMap);\n  }\n  renderBack() {\n    const muscleMapBack = document.createElement('div');\n    muscleMapBack.classList.add('muscle-map-back');\n    const cap = document.createElement('img');\n    cap.classList.add('front-cap');\n    cap.src = 'assets/images/front-cap-transparent.png';\n    const head2 = document.createElement('div');\n    head2.classList.add('head-2');\n    const back2 = document.createElement('div');\n    back2.classList.add('back-2');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftTricep = document.createElement('div');\n    leftTricep.classList.add('left-tricep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightTricep = document.createElement('div');\n    rightTricep.classList.add('right-tricep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const leftGlute2 = document.createElement('div');\n    leftGlute2.classList.add('left-glute-2');\n    const rightGlute2 = document.createElement('div');\n    rightGlute2.classList.add('right-glute-2');\n    const leftHamstring = document.createElement('div');\n    leftHamstring.classList.add('left-hamstring');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightHamstring = document.createElement('div');\n    rightHamstring.classList.add('right-hamstring');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMapBack.appendChild(head2);\n    muscleMapBack.appendChild(cap);\n    muscleMapBack.appendChild(back2);\n    muscleMapBack.appendChild(leftShoulder);\n    muscleMapBack.appendChild(leftTricep);\n    muscleMapBack.appendChild(leftForearm);\n    muscleMapBack.appendChild(leftHand);\n    muscleMapBack.appendChild(rightShoulder);\n    muscleMapBack.appendChild(rightForearm);\n    muscleMapBack.appendChild(rightTricep);\n    muscleMapBack.appendChild(rightHand);\n    muscleMapBack.appendChild(leftGlute2);\n    muscleMapBack.appendChild(leftHamstring);\n    muscleMapBack.appendChild(leftCalf);\n    muscleMapBack.appendChild(leftFoot);\n    muscleMapBack.appendChild(rightGlute2);\n    muscleMapBack.appendChild(rightHamstring);\n    muscleMapBack.appendChild(rightCalf);\n    muscleMapBack.appendChild(rightFoot);\n    this.container.appendChild(muscleMapBack);\n  }\n  toggleView() {\n    const frontView = this.container.querySelector('.muscle-map');\n    const backView = this.container.querySelector('.muscle-map-back');\n    if (frontView.style.display !== 'none') {\n      frontView.style.display = 'none';\n      backView.style.display = 'grid';\n    } else {\n      frontView.style.display = 'grid';\n      backView.style.display = 'none';\n    }\n  }\n  bindEvents() {\n    this.addEventListeners();\n    const toggleButton = document.getElementById('toggle-view');\n    toggleButton.addEventListener('click', this.toggleView.bind(this));\n  }\n  renderToggleButton() {\n    const toggleButton = document.createElement('button');\n    toggleButton.id = 'toggle-view';\n    toggleButton.innerText = \"FLIP\";\n    this.container.appendChild(toggleButton);\n  }\n  addEventListeners() {\n    const buddyModal = document.getElementById('buddy-modal');\n    const muscleBlocks = Array.from(document.querySelectorAll('.muscle-map div:not(.head, .eyes, .mouth, .left-hand, .right-hand, .left-foot, .right-foot, .abs div, .chest, .left-chest, .right-chest), .muscle-map-back div:not(.head-2, .left-hand, .right-hand, .left-foot, .right-foot)'));\n    muscleBlocks.forEach(muscleBlock => {\n      muscleBlock.addEventListener('click', () => {\n        if (!this.firstClickDone) {\n          this.container.classList.add('start');\n          buddyModal.id = 'hidden';\n          this.firstClickDone = true;\n        }\n        this.handleClickGenerateExercise(muscleBlock);\n        this.addAnimation(muscleBlock);\n      });\n    });\n    const chest = document.querySelector('.chest');\n    chest.addEventListener('click', () => {\n      if (!this.firstClickDone) {\n        this.container.classList.add('start');\n        buddyModal.id = 'hidden';\n        this.firstClickDone = true;\n      }\n      this.handleClickGenerateExercise(chest);\n      const leftChest = chest.querySelector('.left-chest');\n      const rightChest = chest.querySelector('.right-chest');\n      this.addAnimation(leftChest);\n      this.addAnimation(rightChest);\n    });\n  }\n  addAnimation(element) {\n    element.classList.add('animate');\n    element.addEventListener('animationend', () => {\n      element.classList.remove('animate');\n    });\n  }\n  handleClickGenerateExercise(muscleBlock) {\n    if (this.onCooldown) {\n      return;\n    }\n    if (this.myCarousel.storedExercises.length < 4) {\n      (0,_exercises_js__WEBPACK_IMPORTED_MODULE_0__.generateExercise)(muscleBlock, this.myCarousel);\n      this.startCooldown();\n    } else {\n      muscleBlock.removeEventListener('click', () => {});\n    }\n  }\n  startCooldown() {\n    this.onCooldown = true;\n    setTimeout(() => {\n      this.onCooldown = false;\n    }, 2000);\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MuscleMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/muscleMap.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teWZpdG5lc3NidWRkeS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;