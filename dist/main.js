/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/muscleMap */ \"./src/scripts/muscleMap.js\");\n/* harmony import */ var _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/carousel */ \"./src/scripts/carousel.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // const instructionsContainer = document.querySelector('.instructions-container');\n\n  const storedExercises = [];\n  const carouselContainer = document.querySelector('.carousel-container');\n  const myCarousel = new _scripts_carousel__WEBPACK_IMPORTED_MODULE_1__[\"default\"](carouselContainer, storedExercises);\n  const bodyContainer = document.querySelector('.body-container');\n  new _scripts_muscleMap__WEBPACK_IMPORTED_MODULE_0__[\"default\"](bodyContainer, myCarousel);\n\n  // const audio = document.getElementById('myAudio');\n  // // audio.currentTime = 14;\n  // const toggleButton = document.getElementById('toggleButton');\n\n  // toggleButton.addEventListener('click', () => {\n  //     if (audio.paused) {\n  //         audio.play();\n  //         toggleButton.innerText = 'PAUSE';\n  //     } else {\n  //         audio.pause();\n  //         toggleButton.innerText = 'TECHNO';\n  //     }\n  // });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQTRDO0FBQ0Y7QUFFMUNFLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRDs7RUFFQSxNQUFNQyxlQUFlLEdBQUcsRUFBRTtFQUMxQixNQUFNQyxpQkFBaUIsR0FBR0gsUUFBUSxDQUFDSSxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdkUsTUFBTUMsVUFBVSxHQUFHLElBQUlOLHlEQUFRLENBQUNJLGlCQUFpQixFQUFFRCxlQUFlLENBQUM7RUFFbkUsTUFBTUksYUFBYSxHQUFHTixRQUFRLENBQUNJLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztFQUMvRCxJQUFJTiwwREFBUyxDQUFDUSxhQUFhLEVBQUVELFVBQVUsQ0FBQzs7RUFFeEM7RUFDQTtFQUNBOztFQUVBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215Zml0bmVzc2J1ZGR5Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE11c2NsZU1hcCBmcm9tICcuL3NjcmlwdHMvbXVzY2xlTWFwJztcbmltcG9ydCBDYXJvdXNlbCBmcm9tICcuL3NjcmlwdHMvY2Fyb3VzZWwnO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIC8vIGNvbnN0IGluc3RydWN0aW9uc0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnN0cnVjdGlvbnMtY29udGFpbmVyJyk7XG5cbiAgICBjb25zdCBzdG9yZWRFeGVyY2lzZXMgPSBbXTtcbiAgICBjb25zdCBjYXJvdXNlbENvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbC1jb250YWluZXInKTtcbiAgICBjb25zdCBteUNhcm91c2VsID0gbmV3IENhcm91c2VsKGNhcm91c2VsQ29udGFpbmVyLCBzdG9yZWRFeGVyY2lzZXMpO1xuXG4gICAgY29uc3QgYm9keUNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib2R5LWNvbnRhaW5lcicpO1xuICAgIG5ldyBNdXNjbGVNYXAoYm9keUNvbnRhaW5lciwgbXlDYXJvdXNlbCk7XG5cbiAgICAvLyBjb25zdCBhdWRpbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUF1ZGlvJyk7XG4gICAgLy8gLy8gYXVkaW8uY3VycmVudFRpbWUgPSAxNDtcbiAgICAvLyBjb25zdCB0b2dnbGVCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9nZ2xlQnV0dG9uJyk7XG5cbiAgICAvLyB0b2dnbGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgLy8gICAgIGlmIChhdWRpby5wYXVzZWQpIHtcbiAgICAvLyAgICAgICAgIGF1ZGlvLnBsYXkoKTtcbiAgICAvLyAgICAgICAgIHRvZ2dsZUJ1dHRvbi5pbm5lclRleHQgPSAnUEFVU0UnO1xuICAgIC8vICAgICB9IGVsc2Uge1xuICAgIC8vICAgICAgICAgYXVkaW8ucGF1c2UoKTtcbiAgICAvLyAgICAgICAgIHRvZ2dsZUJ1dHRvbi5pbm5lclRleHQgPSAnVEVDSE5PJztcbiAgICAvLyAgICAgfVxuICAgIC8vIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiTXVzY2xlTWFwIiwiQ2Fyb3VzZWwiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJzdG9yZWRFeGVyY2lzZXMiLCJjYXJvdXNlbENvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJteUNhcm91c2VsIiwiYm9keUNvbnRhaW5lciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/carousel.js":
/*!*********************************!*\
  !*** ./src/scripts/carousel.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises */ \"./src/scripts/exercises.js\");\n\nclass Carousel {\n  constructor(containerEl, storedExercises) {\n    this.container = containerEl;\n    this.render();\n    this.storedExercises = storedExercises;\n  }\n  render() {\n    const carousel = document.createElement(\"div\");\n    carousel.classList.add(\"carousel\");\n    const carouselNav = document.createElement(\"div\");\n    carouselNav.classList.add(\"carousel-nav\");\n    this.carouselNav = carouselNav;\n    const carouselSlides = document.createElement(\"div\");\n    carouselSlides.classList.add(\"carousel-slides\");\n    this.carouselSlides = carouselSlides;\n    const exerciseTitle = document.createElement(\"div\");\n    exerciseTitle.classList.add(\"my-exercises\");\n    exerciseTitle.innerText = \"My Exercises\";\n    this.container.appendChild(carousel);\n    carousel.style.display = \"none\";\n    carousel.append(exerciseTitle, carouselNav, carouselSlides);\n  }\n  addExerciseToCarousel(exercise) {\n    const carouselItem = document.createElement(\"div\");\n    carouselItem.classList.add(\"carousel-item\");\n    carouselItem.id = `carousel-item-${document.querySelectorAll(\".carousel-item\").length + 1}`;\n    const carouselItemTitle = document.createElement('div');\n    carouselItemTitle.classList.add('carousel-item-title');\n    carouselItemTitle.innerText = exercise.name;\n    const carouselItemType = document.createElement('div');\n    carouselItemType.classList.add('carousel-item-type');\n    carouselItemType.innerText = exercise.type;\n    const closeButton = document.createElement(\"button\");\n    closeButton.classList.add(\"carousel-item-close-button\");\n    closeButton.innerText = \"X\";\n    if (this.carouselSlides.children.length === 4) {\n      return;\n    }\n    this.carouselSlides.appendChild(carouselItem);\n    carouselItem.append(carouselItemTitle, carouselItemType, closeButton);\n    if (this.carouselSlides.children.length === 1) {\n      this.container.querySelector(\".carousel\").style.display = \"block\";\n    }\n    carouselItem.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    const numItems = document.querySelectorAll(\".carousel-item\").length;\n    const newNavItem = document.createElement(\"a\");\n    const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n    navItems.forEach(navItem => navItem.classList.remove('active'));\n    newNavItem.classList.add('active');\n    newNavItem.href = `#carousel-item-${numItems}`;\n    newNavItem.textContent = numItems.toString();\n    this.carouselNav.appendChild(newNavItem);\n    newNavItem.addEventListener('click', event => {\n      debugger;\n      (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.displayExerciseInfo)(exercise);\n      const navItems = Array.from(document.querySelectorAll('.carousel-nav a'));\n      navItems.forEach(navItem => navItem.classList.remove('active'));\n      event.target.classList.add('active');\n    });\n    closeButton.addEventListener('click', () => {\n      const nextExercise = this.removeExerciseFromCarousel(carouselItem);\n      (0,_exercises__WEBPACK_IMPORTED_MODULE_0__.removeExerciseFromInfoContainer)(nextExercise);\n    });\n    debugger;\n    this.storedExercises.push(exercise);\n  }\n  removeExerciseFromCarousel(carouselItem) {\n    this.carouselSlides.removeChild(carouselItem);\n    const itemId = carouselItem.id.split(\"-\")[2];\n    const navItem = document.querySelector(`.carousel-nav a[href=\"#carousel-item-${itemId}\"]`);\n    this.carouselNav.removeChild(navItem);\n\n    // Remove the exercise from the storedExercises array\n    const exerciseName = carouselItem.querySelector('.carousel-item-title').innerText;\n    const exerciseIndex = this.storedExercises.findIndex(exercise => exercise.name === exerciseName);\n    this.storedExercises.splice(exerciseIndex, 1);\n    if (this.carouselSlides.children.length === 0) {\n      this.container.querySelector(\".carousel\").style.display = \"none\"; // Hide the carousel when all exercises are removed\n    }\n\n    return this.storedExercises[exerciseIndex - 1];\n  }\n  updateStoredExercise(updatedExercise) {\n    // Find the index of the exercise that matches the name of updatedExercise\n    const index = this.storedExercises.findIndex(exercise => exercise.name === updatedExercise.name);\n    if (index !== -1) {\n      this.storedExercises[index] = updatedExercise;\n    }\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Carousel);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/carousel.js\n");

/***/ }),

/***/ "./src/scripts/data.js":
/*!*****************************!*\
  !*** ./src/scripts/data.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bicepExercises\": function() { return /* binding */ bicepExercises; },\n/* harmony export */   \"chestExercises\": function() { return /* binding */ chestExercises; },\n/* harmony export */   \"shoulderExercises\": function() { return /* binding */ shoulderExercises; }\n/* harmony export */ });\nconst shoulderExercises = [{\n  type: 'SHOULDERS',\n  name: 'Seated Dumbbell Press',\n  apiName: \"Dumbbell Neutral Overhead Press\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids', 'Triceps'],\n  suggestedRepRange: '8-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/TfvFzAjFktX0mk\"\n}, {\n  type: 'SHOULDERS',\n  name: 'Arnold Press',\n  apiName: \"Dumbbell Seated Arnold Press\",\n  primaryMuscles: ['Anterior and Lateral Deltoids'],\n  secondaryMuscles: ['Triceps'],\n  suggestedRepRange: '10-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/yj8v4s87LiY57Y\"\n}, {\n  type: 'SHOULDERS',\n  name: 'Dumbbell Lateral Raise',\n  apiName: \"Dumbbell Lateral Raise\",\n  primaryMuscles: ['Lateral Deltoids'],\n  secondaryMuscles: ['Anterior and Posterior Deltoids'],\n  suggestedRepRange: '12-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/e7O-I9hVe4D9mN\"\n}, {\n  type: 'SHOULDERS',\n  name: 'Dumbbell Front Raise',\n  apiName: \"Dumbbell Front Raise\",\n  primaryMuscles: ['Anterior Deltoids'],\n  secondaryMuscles: ['Lateral Deltoids'],\n  suggestedRepRange: '8-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/byZGzxCpG0CDVH\"\n}, {\n  type: 'SHOULDERS',\n  name: 'Reverse Fly',\n  apiName: \"Dumbbell Laying Reverse Fly\",\n  primaryMuscles: ['Posterior Deltoids'],\n  secondaryMuscles: ['Trapezius', 'Rhomboids'],\n  suggestedRepRange: '10-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/t6GtGbr8C87HgB\"\n}];\nconst chestExercises = [{\n  type: 'CHEST',\n  name: 'Barbell Bench Press',\n  apiName: 'Barbell Bench Press',\n  //MuscleWiki API\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  suggestedRepRange: '8-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/6DfWN1z54cETZX\" //ExerciseDB API\n}, {\n  type: 'CHEST',\n  name: 'Push-Ups',\n  apiName: \"Push Up\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Triceps', 'Deltoids'],\n  suggestedRepRange: '10-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/oGhCP1aqkj6UMA\"\n}, {\n  type: 'CHEST',\n  name: 'Dumbbell Fly',\n  apiName: \"Dumbbell Chest Fly\",\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  suggestedRepRange: '12-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/1KD5UWEroDlyFE\"\n}, {\n  type: 'CHEST',\n  name: 'Incline Bench Press',\n  apiName: \"Barbell Incline Bench Press\",\n  primaryMuscles: ['Upper Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  suggestedRepRange: '8-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/LEHuMI0sJlp8p7\"\n}, {\n  type: 'CHEST',\n  name: 'Cable Crossover',\n  apiName: 'Cable Pec Fly',\n  primaryMuscles: ['Pectoralis Major'],\n  secondaryMuscles: ['Anterior Deltoids', 'Triceps'],\n  suggestedRepRange: '10-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/6EZCBL59QmMiqG\"\n}];\nconst bicepExercises = [{\n  type: 'ARMS',\n  name: 'Barbell Curl',\n  apiName: \"Barbell Curl\",\n  primaryMuscles: ['Biceps'],\n  secondaryMuscles: ['Forearms'],\n  suggestedRepRange: '8-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/xIdtvDMsR5y7fR\"\n}, {\n  type: 'ARMS',\n  name: 'Dumbbell Curl',\n  apiName: \"Dumbbell Curl\",\n  primaryMuscles: ['Biceps'],\n  secondaryMuscles: ['Forearms'],\n  suggestedRepRange: '10-15 reps',\n  gifUrl: \"https://api.exercisedb.io/image/DqOMqS4IvguNzu\"\n}, {\n  type: 'ARMS',\n  name: 'Preacher Curl',\n  apiName: \"Dumbbell Single Arm Preacher Curl\",\n  primaryMuscles: ['Biceps'],\n  secondaryMuscles: ['Forearms'],\n  suggestedRepRange: '10-12 reps',\n  gifUrl: \"https://api.exercisedb.io/image/jheZVO6g5uhx1v\"\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/data.js\n");

/***/ }),

/***/ "./src/scripts/exercises.js":
/*!**********************************!*\
  !*** ./src/scripts/exercises.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"displayExerciseInfo\": function() { return /* binding */ displayExerciseInfo; },\n/* harmony export */   \"generateExercise\": function() { return /* binding */ generateExercise; },\n/* harmony export */   \"removeExerciseFromInfoContainer\": function() { return /* binding */ removeExerciseFromInfoContainer; }\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/scripts/data.js\");\n\nconst exercises = {\n  'chest': _data_js__WEBPACK_IMPORTED_MODULE_0__.chestExercises,\n  'chest': _data_js__WEBPACK_IMPORTED_MODULE_0__.chestExercises,\n  'left-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'right-shoulder': _data_js__WEBPACK_IMPORTED_MODULE_0__.shoulderExercises,\n  'left-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises,\n  'right-bicep': _data_js__WEBPACK_IMPORTED_MODULE_0__.bicepExercises\n};\nconst generateExercise = async (muscleBlock, carouselInstance) => {\n  const exercisesByMuscleBlock = exercises[muscleBlock.classList[0]]; // Get exercises for the muscle block class\n  debugger;\n  // keep assigning an exercise until it's NOT in storedExercises\n  let exercise;\n  do {\n    const randomIndex = Math.floor(Math.random() * exercisesByMuscleBlock.length);\n    exercise = exercisesByMuscleBlock[randomIndex];\n  } while (carouselInstance.storedExercises.includes(exercise));\n\n  // check if anything exists on the R side\n  const instructionsContainer = document.querySelector('.instructions-container');\n  while (instructionsContainer.firstChild) {\n    instructionsContainer.removeChild(instructionsContainer.firstChild);\n  }\n  ;\n  const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n  while (exerciseInfoContainer.firstChild) {\n    exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n  }\n  ;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n  const exerciseTitleContainer = document.querySelector('.exercise-title-container');\n  if (exerciseTitleContainer.firstChild) {\n    exerciseTitleContainer.removeChild(exerciseTitleContainer.firstChild);\n  }\n\n  // create/append exerciseInfo\n  const primaryMusclesTitle = document.createElement('div');\n  primaryMusclesTitle.classList.add('primary-muscles-title');\n  primaryMusclesTitle.innerText = 'Primary Muscles';\n  const primaryMuscles = document.createElement('div');\n  primaryMuscles.classList.add('primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMusclesTitle = document.createElement('div');\n  secondaryMusclesTitle.classList.add('secondary-muscles-title');\n  secondaryMusclesTitle.innerText = 'Secondary Muscles';\n  const secondaryMuscles = document.createElement('div');\n  secondaryMuscles.classList.add('secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\", \")}`;\n\n  // add three buttons in a row: strength, size, endurance\n  // depending on which one the user clicks, underneath an element is created with\n  // the recommended rep range for that button.\n\n  const strengthButton = document.createElement('button');\n  strengthButton.classList.add('goal-button');\n  strengthButton.innerText = 'Strength';\n  strengthButton.dataset.goal = 'strength';\n  const sizeButton = document.createElement('button');\n  sizeButton.classList.add('goal-button');\n  sizeButton.innerText = 'Size';\n  sizeButton.dataset.goal = 'size';\n  const enduranceButton = document.createElement('button');\n  enduranceButton.classList.add('goal-button');\n  enduranceButton.innerText = 'Endurance';\n  enduranceButton.dataset.goal = 'endurance';\n  strengthButton.addEventListener('click', () => {\n    debugger;\n    toggleActiveButton(strengthButton);\n    displayRecommendedRepRange('strength');\n    exercise.goal = 'strength';\n    // exercise.repRange = '4-6 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  sizeButton.addEventListener('click', () => {\n    toggleActiveButton(sizeButton);\n    displayRecommendedRepRange('size');\n    exercise.goal = 'size';\n    // exercise.repRange = '8-12 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  enduranceButton.addEventListener('click', () => {\n    debugger;\n    toggleActiveButton(enduranceButton);\n    displayRecommendedRepRange('endurance');\n    exercise.goal = 'endurance';\n    // exercise.repRange = '15-20 reps';\n    carouselInstance.updateStoredExercise(exercise);\n  });\n  const buttonsContainer = document.createElement('div');\n  buttonsContainer.classList.add('goal-buttons-container');\n  buttonsContainer.append(strengthButton, sizeButton, enduranceButton);\n  const exerciseInfo = document.createElement('div');\n  exerciseInfo.classList.add('exercise-info');\n  exerciseInfo.append(primaryMusclesTitle, primaryMuscles, secondaryMusclesTitle, secondaryMuscles, buttonsContainer);\n  exerciseInfoContainer.appendChild(exerciseInfo);\n\n  // create/append gif\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.src = exercise.gifUrl;\n  gif.alt = exercise.name;\n  gifContainer.appendChild(gif);\n\n  // create/append instructions\n  const steps = await fetchSteps(exercise.apiName);\n  exercise.steps = steps;\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = `  ${step}`;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n\n  // exerciseTitle.style.display = 'flex';\n  const exerciseTitle = document.createElement('div');\n  exerciseTitle.classList.add('exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  exerciseTitleContainer.append(exerciseTitle);\n  const instructionsExerciseTitle = document.createElement('div');\n  instructionsExerciseTitle.classList.add('instructions-exercise-title');\n  instructionsExerciseTitle.innerText = 'Instructions';\n  instructionsContainer.appendChild(instructionsExerciseTitle);\n  instructionsContainer.appendChild(exerciseSteps);\n  carouselInstance.addExerciseToCarousel(exercise);\n\n  // const closeButton = document.createElement('button');\n  // closeButton.classList.add('close-button');\n  // closeButton.innerText = 'X';\n  // closeButton.addEventListener('click', () => {\n  //     exerciseDisplay.remove();\n  //     carouselInstance.removeExerciseFromInfoContainer(carouselItem);\n  // });\n\n  // exerciseDisplay.append(closeButton);\n};\n\nconst displayRecommendedRepRange = workoutType => {\n  let repRangeContainer = document.querySelector('.rep-range');\n  if (!repRangeContainer) {\n    repRangeContainer = document.createElement('div');\n    repRangeContainer.classList.add('rep-range');\n\n    // Append the rep range container to the exercise info container\n    const exerciseInfo = document.querySelector('.exercise-info');\n    exerciseInfo.appendChild(repRangeContainer);\n  } else {\n    repRangeContainer.innerText = ''; // Clear the existing inner text\n  }\n\n  let repRange;\n  if (workoutType === 'strength') {\n    repRange = '4-6 reps';\n  } else if (workoutType === 'size') {\n    repRange = '8-12 reps';\n  } else if (workoutType === 'endurance') {\n    repRange = '15-20 reps';\n  }\n  repRangeContainer.innerText = repRange;\n};\nconst toggleActiveButton = clickedButton => {\n  const buttons = Array.from(document.querySelectorAll('.goal-button'));\n  buttons.forEach(button => {\n    if (button === clickedButton) {\n      button.classList.add('active');\n    } else {\n      button.classList.remove('active');\n    }\n  });\n};\nconst removeExerciseFromInfoContainer = nextExercise => {\n  if (nextExercise) displayExerciseInfo(nextExercise);else {\n    const exerciseTitle = document.querySelector('.exercise-title');\n    exerciseTitle.innerText = \"\";\n    exerciseTitle.style.display = 'none';\n    const instructionsContainer = document.querySelector('.instructions-container');\n    while (instructionsContainer.firstChild) {\n      instructionsContainer.removeChild(instructionsContainer.firstChild);\n    }\n    ;\n    const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n    while (exerciseInfoContainer.firstChild) {\n      exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n    }\n    ;\n    const gifContainer = document.querySelector('.gif-container');\n    if (gifContainer.firstChild) {\n      gifContainer.removeChild(gifContainer.firstChild);\n    }\n    ;\n  }\n};\nconst displayExerciseInfo = exercise => {\n  debugger;\n  // change exercise name and remove appendages\n\n  const exerciseTitle = document.querySelector('.exercise-title');\n  exerciseTitle.innerText = exercise.name;\n  const instructionsContainer = document.querySelector('.instructions-container');\n  // while (instructionsContainer.secondChild) {\n  instructionsContainer.removeChild(instructionsContainer.children[1]);\n  // };\n  const exerciseSteps = document.createElement('ul');\n  exerciseSteps.classList.add('exercise-steps');\n  exercise.steps.forEach(step => {\n    const exerciseStep = document.createElement('li');\n    exerciseStep.classList.add('exercise-step');\n    exerciseStep.innerText = step;\n    exerciseSteps.appendChild(exerciseStep);\n  });\n  instructionsContainer.appendChild(exerciseSteps);\n\n  // const exerciseInfo = document.querySelector('.exercise-info');\n  // while (exerciseInfo.firstChild) {\n  //     exerciseInfo.removeChild(exerciseInfo.firstChild);\n  // };\n\n  // const exerciseInfoContainer = document.querySelector('.exercise-info-container');\n  // while (exerciseInfoContainer.firstChild) {\n  //     exerciseInfoContainer.removeChild(exerciseInfoContainer.firstChild);\n  // };\n\n  const primaryMuscles = document.querySelector('.primary-muscles');\n  primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n  const secondaryMuscles = document.querySelector('.secondary-muscles');\n  secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\" \")}`;\n  const gifContainer = document.querySelector('.gif-container');\n  if (gifContainer.firstChild) {\n    gifContainer.removeChild(gifContainer.firstChild);\n  }\n  ;\n\n  // const exerciseTitleContainer = document.querySelector('.exercise-title-container');\n  // if (exerciseTitleContainer.firstChild) {\n  //     exerciseTitleContainer.removeChild(exerciseTitleContainer.firstChild);\n  // }\n\n  // const closeButton = document.createElement('button');\n  // closeButton.classList.add('close-button');\n  // closeButton.innerText = 'X';\n  // closeButton.addEventListener('click', () => {\n  //     exerciseDisplay.remove();\n  // });\n\n  // exerciseDisplay.append(closeButton);\n\n  // rebuild exercise info\n  // const primaryMusclesTitle = document.createElement('div');\n  // primaryMusclesTitle.classList.add('primary-muscles-title');\n  // primaryMusclesTitle.innerText = 'Primary Muscles';\n\n  // const primaryMuscles = document.createElement('div');\n  // primaryMuscles.classList.add('primary-muscles');\n  // primaryMuscles.innerText = `${exercise.primaryMuscles.join(\" \")}`;\n\n  // const secondaryMusclesTitle = document.createElement('div');\n  // secondaryMusclesTitle.classList.add('secondary-muscles-title');\n  // secondaryMusclesTitle.innerText = 'Secondary Muscles';\n\n  // const secondaryMuscles = document.createElement('div');\n  // secondaryMuscles.classList.add('secondary-muscles');\n  // secondaryMuscles.innerText = `${exercise.secondaryMuscles.join(\", \")}`;\n\n  // const strengthButton = document.createElement('button');\n  // strengthButton.classList.add('goal-button')\n  // strengthButton.innerText = 'Strength';\n  // strengthButton.dataset.goal = 'strength';\n\n  // const sizeButton = document.createElement('button');\n  // sizeButton.classList.add('goal-button')\n  // sizeButton.innerText = 'Size';\n  // sizeButton.dataset.goal = 'size';\n\n  // const enduranceButton = document.createElement('button');\n  // enduranceButton.classList.add('goal-button')\n  // enduranceButton.innerText = 'Endurance';\n  // enduranceButton.dataset.goal = 'endurance';\n\n  // strengthButton.addEventListener('click', () => {\n  //     toggleActiveButton(strengthButton);\n  //     displayRecommendedRepRange('strength');\n  //     exercise.goal = 'strength';\n  // });\n\n  // sizeButton.addEventListener('click', () => {\n  //     toggleActiveButton(sizeButton);\n  //     displayRecommendedRepRange('size');\n  //     exercise.goal = 'size';\n  // });\n\n  // enduranceButton.addEventListener('click', () => {\n  //     toggleActiveButton(enduranceButton);\n  //     displayRecommendedRepRange('endurance');\n  //     exercise.goal = 'endurance';\n  // });\n\n  // const buttonsContainer = document.createElement('div');\n  // buttonsContainer.classList.add('goal-buttons-container');\n  // buttonsContainer.append(strengthButton, sizeButton, enduranceButton);\n\n  // exerciseInfo.append(primaryMusclesTitle, primaryMuscles, secondaryMusclesTitle, secondaryMuscles, buttonsContainer);\n  debugger;\n  const goalButtons = document.querySelectorAll('.goal-button');\n  goalButtons.forEach(button => button.classList.remove('active'));\n  const button = document.querySelector(`.goal-button[data-goal=\"${exercise.goal}\"]`);\n  // const button1 = document.querySelector('.rep-range');\n  if (button) {\n    button.classList.add('active');\n    displayRecommendedRepRange(exercise.goal);\n    // const repRangeContainer = document.createElement('div');\n    // repRangeContainer.classList.add('rep-range');\n    // repRangeContainer.innerText = exercise.repRange;\n    // exerciseInfo.appendChild(repRangeContainer);\n  } else {\n    // Reset the innerText of the rep-range element\n    const repRangeElement = document.querySelector('.rep-range');\n    if (repRangeElement) {\n      repRangeElement.innerText = '';\n    }\n  }\n\n  // rebuild instructions\n  // const exerciseSteps = document.createElement('ul');\n  // exerciseSteps.classList.add('exercise-steps');\n  // exercise.steps.forEach((step) => {\n  //     const exerciseStep = document.createElement('li');\n  //     exerciseStep.classList.add('exercise-step');\n  //     exerciseStep.innerText = step;\n  //     exerciseSteps.appendChild(exerciseStep);\n  // });\n\n  // const instructionsExerciseTitle = document.createElement('div');\n  // instructionsExerciseTitle.classList.add('instructions-exercise-title');\n  // instructionsExerciseTitle.innerText = 'Instructions';\n\n  // instructionsContainer.appendChild(instructionsExerciseTitle);\n  // instructionsContainer.appendChild(exerciseSteps);\n\n  // rebuild gif\n  const gif = document.createElement('img');\n  gif.classList.add('gif');\n  gif.src = exercise.gifUrl;\n  gif.alt = exercise.name;\n  gifContainer.appendChild(gif);\n};\nconst fetchSteps = async exerciseName => {\n  const encodedName = encodeURIComponent(exerciseName);\n  const url = `https://musclewiki.p.rapidapi.com/exercises?name=${encodedName}`;\n  const options = {\n    method: 'GET',\n    headers: {\n      'X-RapidAPI-Key': '3af8ef8f2dmshc6efeb993784441p1a7439jsn93b2667827e7',\n      'X-RapidAPI-Host': 'musclewiki.p.rapidapi.com'\n    }\n  };\n  try {\n    const response = await fetch(url, options);\n    const result = await response.json();\n    const exercise = result[0];\n    return exercise.steps;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/exercises.js\n");

/***/ }),

/***/ "./src/scripts/muscleMap.js":
/*!**********************************!*\
  !*** ./src/scripts/muscleMap.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _exercises_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./exercises.js */ \"./src/scripts/exercises.js\");\n\nclass MuscleMap {\n  constructor(containerEl, myCarousel) {\n    this.container = containerEl;\n    this.myCarousel = myCarousel;\n    this.render();\n    this.renderBack();\n    this.renderToggleButton();\n    this.handleClickGenerateExercise = this.handleClickGenerateExercise.bind(this);\n    this.bindEvents();\n  }\n  render() {\n    const muscleMap = document.createElement('div');\n    muscleMap.classList.add('muscle-map');\n    const head = document.createElement('div');\n    head.classList.add('head');\n    const chest = document.createElement('div');\n    chest.classList.add('chest');\n    const leftChest = document.createElement('div');\n    leftChest.classList.add('left-chest');\n    chest.appendChild(leftChest);\n    const rightChest = document.createElement('div');\n    rightChest.classList.add('right-chest');\n    chest.appendChild(rightChest);\n    const back = document.createElement('div');\n    back.classList.add('back');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftBicep = document.createElement('div');\n    leftBicep.classList.add('left-bicep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightBicep = document.createElement('div');\n    rightBicep.classList.add('right-bicep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const absContainer = document.createElement('div');\n    absContainer.classList.add('abs');\n    for (let i = 0; i < 6; i++) {\n      const abs = document.createElement('div');\n      absContainer.appendChild(abs);\n    }\n    ;\n    const leftGlute = document.createElement('div');\n    leftGlute.classList.add('left-glute');\n    const leftQuad = document.createElement('div');\n    leftQuad.classList.add('left-quad');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightGlute = document.createElement('div');\n    rightGlute.classList.add('right-glute');\n    const rightQuad = document.createElement('div');\n    rightQuad.classList.add('right-quad');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMap.appendChild(head);\n    muscleMap.appendChild(chest);\n    muscleMap.appendChild(back);\n    muscleMap.appendChild(leftShoulder);\n    muscleMap.appendChild(leftBicep);\n    muscleMap.appendChild(leftForearm);\n    muscleMap.appendChild(leftHand);\n    muscleMap.appendChild(rightShoulder);\n    muscleMap.appendChild(rightForearm);\n    muscleMap.appendChild(rightBicep);\n    muscleMap.appendChild(rightHand);\n    muscleMap.appendChild(absContainer);\n    muscleMap.appendChild(leftGlute);\n    muscleMap.appendChild(leftQuad);\n    muscleMap.appendChild(leftCalf);\n    muscleMap.appendChild(leftFoot);\n    muscleMap.appendChild(rightGlute);\n    muscleMap.appendChild(rightQuad);\n    muscleMap.appendChild(rightCalf);\n    muscleMap.appendChild(rightFoot);\n    this.container.appendChild(muscleMap);\n  }\n  renderBack() {\n    const muscleMapBack = document.createElement('div');\n    muscleMapBack.classList.add('muscle-map-back');\n    const head2 = document.createElement('div');\n    head2.classList.add('head-2');\n    const back2 = document.createElement('div');\n    back2.classList.add('back-2');\n    const leftShoulder = document.createElement('div');\n    leftShoulder.classList.add('left-shoulder');\n    const leftBicep = document.createElement('div');\n    leftBicep.classList.add('left-bicep');\n    const leftForearm = document.createElement('div');\n    leftForearm.classList.add('left-forearm');\n    const leftHand = document.createElement('div');\n    leftHand.classList.add('left-hand');\n    const rightShoulder = document.createElement('div');\n    rightShoulder.classList.add('right-shoulder');\n    const rightBicep = document.createElement('div');\n    rightBicep.classList.add('right-bicep');\n    const rightForearm = document.createElement('div');\n    rightForearm.classList.add('right-forearm');\n    const rightHand = document.createElement('div');\n    rightHand.classList.add('right-hand');\n    const leftGlute2 = document.createElement('div');\n    leftGlute2.classList.add('left-glute-2');\n    const rightGlute2 = document.createElement('div');\n    rightGlute2.classList.add('right-glute-2');\n    const leftHamstring = document.createElement('div');\n    leftHamstring.classList.add('left-hamstring');\n    const leftCalf = document.createElement('div');\n    leftCalf.classList.add('left-calf');\n    const leftFoot = document.createElement('div');\n    leftFoot.classList.add('left-foot');\n    const rightHamstring = document.createElement('div');\n    rightHamstring.classList.add('right-hamstring');\n    const rightCalf = document.createElement('div');\n    rightCalf.classList.add('right-calf');\n    const rightFoot = document.createElement('div');\n    rightFoot.classList.add('right-foot');\n    muscleMapBack.appendChild(head2);\n    muscleMapBack.appendChild(back2);\n    muscleMapBack.appendChild(leftShoulder);\n    muscleMapBack.appendChild(leftBicep);\n    muscleMapBack.appendChild(leftForearm);\n    muscleMapBack.appendChild(leftHand);\n    muscleMapBack.appendChild(rightShoulder);\n    muscleMapBack.appendChild(rightForearm);\n    muscleMapBack.appendChild(rightBicep);\n    muscleMapBack.appendChild(rightHand);\n    muscleMapBack.appendChild(leftGlute2);\n    muscleMapBack.appendChild(leftHamstring);\n    muscleMapBack.appendChild(leftCalf);\n    muscleMapBack.appendChild(leftFoot);\n    muscleMapBack.appendChild(rightGlute2);\n    muscleMapBack.appendChild(rightHamstring);\n    muscleMapBack.appendChild(rightCalf);\n    muscleMapBack.appendChild(rightFoot);\n    this.container.appendChild(muscleMapBack);\n  }\n  toggleView() {\n    const frontView = this.container.querySelector('.muscle-map');\n    const backView = this.container.querySelector('.muscle-map-back');\n    if (frontView.style.display !== 'none') {\n      frontView.style.display = 'none';\n      backView.style.display = 'grid';\n    } else {\n      frontView.style.display = 'grid';\n      backView.style.display = 'none';\n    }\n  }\n  bindEvents() {\n    this.addEventListeners();\n    const toggleButton = document.getElementById('toggle-view');\n    toggleButton.addEventListener('click', this.toggleView.bind(this));\n  }\n  renderToggleButton() {\n    const toggleButton = document.createElement('button');\n    toggleButton.id = 'toggle-view';\n    toggleButton.innerText = \"FLIP\";\n    this.container.appendChild(toggleButton);\n  }\n\n  // addEventListeners() {\n  //     const muscleBlocks = Array.from(document.querySelectorAll('.muscle-map div:not(.abs, .abs div)'));\n  //     muscleBlocks.forEach(muscleBlock => {\n  //         muscleBlock.addEventListener('click', () => {\n  //             this.handleClickGenerateExercise(muscleBlock);\n  //             muscleBlock.classList.add('animate');\n  //             muscleBlock.addEventListener('animationend', () => {\n  //                 muscleBlock.classList.remove('animate');\n  //             });\n  //         });\n  //         // muscleBlock.addEventListener('click', this.handleClickGenerateFace);\n  //     });\n  // }\n\n  addEventListeners() {\n    const muscleBlocks = Array.from(document.querySelectorAll('.muscle-map div:not(.abs, .abs div, .chest, .left-chest, .right-chest)'));\n    muscleBlocks.forEach(muscleBlock => {\n      muscleBlock.addEventListener('click', () => {\n        this.handleClickGenerateExercise(muscleBlock);\n        this.addAnimation(muscleBlock);\n      });\n    });\n    const chest = document.querySelector('.chest');\n    chest.addEventListener('click', () => {\n      this.handleClickGenerateExercise(chest);\n      const leftChest = chest.querySelector('.left-chest');\n      const rightChest = chest.querySelector('.right-chest');\n      this.addAnimation(leftChest);\n      this.addAnimation(rightChest);\n    });\n  }\n  addAnimation(element) {\n    element.classList.add('animate');\n    element.addEventListener('animationend', () => {\n      element.classList.remove('animate');\n    });\n  }\n  handleClickGenerateExercise(muscleBlock) {\n    if (this.myCarousel.storedExercises.length < 4) {\n      (0,_exercises_js__WEBPACK_IMPORTED_MODULE_0__.generateExercise)(muscleBlock, this.myCarousel);\n    } else {\n      muscleBlock.removeEventListener('click', () => {});\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MuscleMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/muscleMap.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teWZpdG5lc3NidWRkeS8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;